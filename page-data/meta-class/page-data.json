{"componentChunkName":"component---src-templates-post-jsx","path":"/meta-class/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"dcd66e70-19bb-529a-93eb-a40dcda3967d","excerpt":"Meta 클래스란? 모델 내부에 정의되는 클래스로 Django모델 자체에 대한 정보, 속성을 추가하는 클래스이다. Meta 클래스는 권한, 데이터베이스의 이름, 단 복수 이름, 추상화, 순서 지정등과 같은 모델에 대한 다양한 사항을 정의하는데 사용할 수 있다. 다음은 Meta 클래스 활용 예시이다. 1. abstract 모델이 추상적인지를 결정한다. 추상…","html":"<h2>Meta 클래스란?</h2>\n<p>모델 내부에 정의되는 클래스로 Django모델 자체에 대한 정보, 속성을 추가하는 클래스이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n<span class=\"token comment\">#모델 내부에 정의</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyModel</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>Meta 클래스는 권한, 데이터베이스의 이름, 단 복수 이름, 추상화, 순서 지정등과 같은 모델에 대한 다양한 사항을 정의하는데 사용할 수 있다.</p>\n<p>다음은 Meta 클래스 활용 예시이다.</p>\n<h3>1. abstract</h3>\n<p>모델이 추상적인지를 결정한다. 추상 클래스는 인스턴스화 할 수 없고 확장 또는 상속만 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        abstract <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></code></pre></div>\n<h3>2. db_table</h3>\n<p>데이터베이스 테이블 이름을 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n    db_table <span class=\"token operator\">=</span> <span class=\"token string\">\"comment\"</span></code></pre></div>\n<p>기본적으로 Django에서 db table의 이름은 앱이름_모델이름으로 정의된다.</p>\n<p>ex) <em>board앱의 Post모델의 경우: board</em>post로 정의됨_</p>\n<p>MySQL등 장고 외부 데이터베이스와 연동할 때 사용하는듯?</p>\n<p>MySQL 백엔드의 경우 테이블 이름은 소문자로 지정해야하고 Oracle은 테이블 이름에 30자 제한이 있음. 이럴 때 사용하는듯</p>\n<h3>3. ordering</h3>\n<p>모델 필드명을 기준으로 모델 객체의 순서를 정의한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JobPosting</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dateTimeOfPosting <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>auto_now_add <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"-dateTimeOfPosting\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3>4. verbose_name</h3>\n<p>Django 모델을 admin페이지에서 조회할 때 모델 표기 방법을 변경한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n    verbose_name <span class=\"token operator\">=</span> <span class=\"token string\">\"포스트\"</span></code></pre></div>","frontmatter":{"title":"Django의 Meta 클래스 활용","date":"April 03, 2022","update":null,"tags":["django"],"series":null},"fields":{"slug":"/meta-class/","readingTime":{"minutes":1.955}}},"seriesList":{"edges":[{"node":{"id":"1c0ade67-50d9-566d-8cdf-505bc94e9e30","fields":{"slug":"/1/"},"frontmatter":{"title":"git pull 오류 : fatal: refusing to merge unrelated histories"}}},{"node":{"id":"a18a1199-15b8-567b-b381-9877cb7e1482","fields":{"slug":"/flex/"},"frontmatter":{"title":"flex 해보기 ㅎㅎ"}}},{"node":{"id":"dcd66e70-19bb-529a-93eb-a40dcda3967d","fields":{"slug":"/meta-class/"},"frontmatter":{"title":"Django의 Meta 클래스 활용"}}},{"node":{"id":"a6448905-d40e-5594-b29f-df2a230f9a13","fields":{"slug":"/alpha-beta-pruning/"},"frontmatter":{"title":"Minimax 알고리즘 & alpha-beta 가지치기"}}},{"node":{"id":"7c43173d-c487-5074-806f-7e56f8eeba7b","fields":{"slug":"/6-2/"},"frontmatter":{"title":"os 6-2"}}},{"node":{"id":"3dfd35bf-9f06-57e0-8aae-bbe57bac7616","fields":{"slug":"/grid/"},"frontmatter":{"title":"그리드를 어떻게 그리드라"}}},{"node":{"id":"3e388686-2418-5776-a4f4-7d485967ad50","fields":{"slug":"/instance-flex/"},"frontmatter":{"title":"장고하다가 모델 인스턴스 뻥튀기 하고싶을때"}}},{"node":{"id":"636f95ec-acc2-5d69-a9c3-fd4a5f353fe3","fields":{"slug":"/7-2/"},"frontmatter":{"title":"작성중"}}},{"node":{"id":"9389bdd5-b1f9-5792-92c1-088fa468105e","fields":{"slug":"/7-1/"},"frontmatter":{"title":"os 7-1"}}},{"node":{"id":"59d0c3bd-2d0d-52eb-8d18-48b791041045","fields":{"slug":"/7-2/"},"frontmatter":{"title":"os 7-2"}}},{"node":{"id":"4902fb75-b6b4-5ce3-bc4a-e0ff83e3f6f0","fields":{"slug":"/8-1/"},"frontmatter":{"title":"os 8-1"}}},{"node":{"id":"3b144405-2ae5-5814-a3eb-f3db08d57801","fields":{"slug":"/auth-user/"},"frontmatter":{"title":"AUTH_USER_MODEL 사용"}}},{"node":{"id":"50d3cfac-3577-5fac-a047-fe61811291bf","fields":{"slug":"/10-1/"},"frontmatter":{"title":"os 10-1"}}},{"node":{"id":"a8468bab-91a9-5069-bc3f-049d1a5aceb9","fields":{"slug":"/env/"},"frontmatter":{"title":"SECRET KEY 환경변수에 숨기기"}}},{"node":{"id":"bfeca13a-0ddf-55e4-89e7-a953a82bdc46","fields":{"slug":"/11-1/"},"frontmatter":{"title":"os 11-1"}}},{"node":{"id":"3b6bc338-4b0f-5981-beb9-5fc9a6b0ffff","fields":{"slug":"/11-2/"},"frontmatter":{"title":"os 11-2"}}},{"node":{"id":"641a26c1-7a3f-591a-9294-2b8a329ef9a6","fields":{"slug":"/list-comprehension/"},"frontmatter":{"title":"list comprehension"}}},{"node":{"id":"8e10d9c5-ccdf-5fb1-9389-4a7d2618115c","fields":{"slug":"/zip/"},"frontmatter":{"title":"zip"}}},{"node":{"id":"232934ea-695b-59c3-9933-f70434f65675","fields":{"slug":"/access-token/"},"frontmatter":{"title":"git access token ¹ß±Þ"}}},{"node":{"id":"4692c2dc-2ae0-58ba-92be-fc345d912b43","fields":{"slug":"/requests/"},"frontmatter":{"title":"python 라이브러리 requests"}}}]},"previous":{"fields":{"slug":"/flex/"},"frontmatter":{"title":"flex 해보기 ㅎㅎ"}},"next":{"fields":{"slug":"/rest/"},"frontmatter":{"title":"REST"}}},"pageContext":{"id":"dcd66e70-19bb-529a-93eb-a40dcda3967d","series":null,"previousPostId":"a18a1199-15b8-567b-b381-9877cb7e1482","nextPostId":"3fab5510-8f86-511d-b0a7-6031ea7f95f8"}},"staticQueryHashes":[]}