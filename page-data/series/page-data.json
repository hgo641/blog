{"componentChunkName":"component---src-pages-series-jsx","path":"/series/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"allMarkdownRemark":{"group":[{"fieldValue":"AWS","totalCount":2},{"fieldValue":"DRF","totalCount":7},{"fieldValue":"EC2","totalCount":1},{"fieldValue":"ERROR","totalCount":1},{"fieldValue":"OS","totalCount":15},{"fieldValue":"React","totalCount":1},{"fieldValue":"S3","totalCount":1},{"fieldValue":"ai","totalCount":2},{"fieldValue":"askcompany","totalCount":7},{"fieldValue":"computer protection","totalCount":16},{"fieldValue":"css","totalCount":2},{"fieldValue":"deploy","totalCount":1},{"fieldValue":"django","totalCount":21},{"fieldValue":"env","totalCount":1},{"fieldValue":"git","totalCount":1},{"fieldValue":"inha","totalCount":2},{"fieldValue":"python","totalCount":7}],"nodes":[{"excerpt":"PM2란? 무중단 서버 실행 멀티스레딩 Daemon Process Manager 보통 Node.js 와 같이 사용되며 Node.js 어플리케이션을 쉽게 관리할 수 있게 해주는 Process Manager이다 Node.js 어플리케이션은 단일 CPU 코어에서 실행되기 때문에 CPU의 멀티코어 시스템은 사용할 수 없다 때문에 Node.js는 클러스터 모듈을 …","fields":{"slug":"/pm2/"},"frontmatter":{"date":"May 16, 2022","update":"May 16, 2022","title":"django에서 pm2 사용하기","tags":["deploy"],"series":"종설"}},{"excerpt":"termius에서 git clone {repo_name} 중 git access tokens 문제 발생 원래 id와 pw를 치고 인증하는데 pw가 아니라 access token을 입력하는 방법으로 바뀜 Access token 발급 방법 github > settings  메뉴의 가장 아래에 있는  클릭 메뉴의 Personal access tokens 클릭해…","fields":{"slug":"/access-token/"},"frontmatter":{"date":"May 16, 2022","update":null,"title":"git access token ¹ß±Þ","tags":["git"],"series":null}},{"excerpt":"Python 라이브러리 requests method 4가지에 따라 api 제공 GET : requests.get() POST : requests.post() PUT : requests.put() DELETE : requests.delete() status_code content text json() headers params get 방식으로 HTTP 요청…","fields":{"slug":"/requests/"},"frontmatter":{"date":"May 16, 2022","update":null,"title":"python 라이브러리 requests","tags":["python"],"series":null}},{"excerpt":"Viewset url등록 메소드별로 수동으로 지정 router 사용 메소드별로 수동 지정 as_view에 인자를 넣어 설정한다 urls.py 이처럼 메소드별로 수동으로 지정할 수 있다 viewset에서 제공하는 기능 create retrieve update partial_update destroy list router 사용 의  url은 으로 연결된다 의…","fields":{"slug":"/viewset-url/"},"frontmatter":{"date":"May 16, 2022","update":null,"title":"viewset url 등록","tags":["django","DRF"],"series":"danmer"}},{"excerpt":"중첩 사용 list comprehension vs zip","fields":{"slug":"/list-comprehension/"},"frontmatter":{"date":"May 12, 2022","update":null,"title":"list comprehension","tags":["python"],"series":null}},{"excerpt":"zip iterable 자료형의 요소를 순서대로 묶어서 새로운 iterable 자료형을 생성한다. iterable : 문자열, 리스트, 튜플과 같이 반복 가능한 자료형 조건 : 요소 개수가 같아야 함 class 'zip'을 바로 print할 수 없고 dict이나 list등으로 형변환을 시켜서 출력한다 # zip으로 list생성 # zip으로 dict생성","fields":{"slug":"/zip/"},"frontmatter":{"date":"May 12, 2022","update":null,"title":"zip","tags":["python"],"series":null}},{"excerpt":"mutual exclusion을 방지하려면? 현실적이지않음 mutual exclusion이 필요해서 하는건데... no preemption 이것도 현실적으로 쉽지않음 no hold and wait 원래는 다른애가 가지고 있으면 무한정 기다려야하는데 한꺼번에 획득하면 기다릴일이 없음 아예 가져가거나 못가져가거나 atomic한듯 no circular wait…","fields":{"slug":"/11-2/"},"frontmatter":{"date":"May 11, 2022","update":null,"title":"os 11-2","tags":["OS"],"series":null}},{"excerpt":".env vsc의 프로젝트 하위에 .env 파일을 만든다 .env 파일안에 SECRET KEY를 적어둔다   export는 전역변수 선언 dotenv pip install dotenv os.environ'ACCESS_KEY' : .env에 ACCESS_KEY가 없으면 KEY ERROR 그냥 python 딕셔너리라고 생각하면 됨 os.environ.get(…","fields":{"slug":"/env/"},"frontmatter":{"date":"May 09, 2022","update":null,"title":"SECRET KEY 환경변수에 숨기기","tags":["env"],"series":null}},{"excerpt":"Dining-Philosophers Problem 각 철학자들은 밥을 먹어야할 때 소통 두 명이 젓가락 한 짝씩 공유 옆에 있는 젓가락만 사용가능 ( i번째 사람은 i또는 i+1만) semaphore chapstic5; # binary semaphore(=mutex lock) signal() # release 밥을 다 먹음 Deadlock 내가 원하는 자…","fields":{"slug":"/11-1/"},"frontmatter":{"date":"May 09, 2022","update":null,"title":"os 11-1","tags":["OS"],"series":null}},{"excerpt":"EC2 인스턴스 할당하기 Security Group > Add Rule HTTP HTTPS Custom -> TCP -> 8000 -> 0.0.0.0/0, ::/0 Review and Launch > Launch Create a new key pair 원하는 이름 설정 Download Key Pair Launch Instance Elastic IP 받기 …","fields":{"slug":"/deploy-ec2/"},"frontmatter":{"date":"May 08, 2022","update":null,"title":"django 프로젝트 ec2로 배포하기","tags":["DRF","AWS","EC2"],"series":"종설"}},{"excerpt":"S3 버킷 생성 Django setting 설정 패키지 & 라이브러리 설치 settings.py - INSTALLED_APP","fields":{"slug":"/media-S3/"},"frontmatter":{"date":"May 08, 2022","update":null,"title":"django media파일 S3서버랑 연동하기","tags":["DRF","AWS","S3"],"series":"종설"}},{"excerpt":"Modular Exponentiation e는 고정된 작은 값을 쓸 수 있지만 d는 매우 큰 숫자를 사용하게 된다 n의 bit수와 d의 bit수는 거의 같다 d = p x q (p, q는 각각 2048 bit) 곱하면 4096bit n은 3072 or 4096bit 0 < d < 파이(n) d의 자릿수 숫자는 불규칙? Binary L to R =(Squa…","fields":{"slug":"/10-1/"},"frontmatter":{"date":"May 02, 2022","update":null,"title":"10-1","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"Mutex Lock race condition - 문제 상황 critical section - 문제 정의 mutex, semaphore, monitor - 해결방법 (high-level) API : OS가 제공해줘야함 Mutex (Mutual Exclusion) : 공유 변수 + 공유 자원(HW자원, I/O device ) ex) 프린터룸 : critic…","fields":{"slug":"/10-1/"},"frontmatter":{"date":"May 02, 2022","update":null,"title":"os 10-1","tags":["OS"],"series":null}},{"excerpt":"Symmetric Encryption의 문제 어떻게 secure채널을 통해서 안전한 키를 전달하지? 전자서명이 있으면 쉽게 해결되나 대칭키만 가지고는 해결할 수 없는 nonrepudiation CBC-MAC이 존재하긴하나 Integrity와 Authentication만 보증한다 만약 A가 B에게 100만원을 준다는 문서를 주었으나 A가 주지않았을 때 : …","fields":{"slug":"/9-2/"},"frontmatter":{"date":"May 01, 2022","update":null,"title":"9-2","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"Django 로그인 처리 Django자체에 디폴트로 로 처리되어있다 장고의  를 활용해서 설정","fields":{"slug":"/LoginView/"},"frontmatter":{"date":"May 01, 2022","update":null,"title":"Django LoginView 사용","tags":["django","python"],"series":"askcompany"}},{"excerpt":"패킷(Packet) 네트워크 계층 (Layer 3)에서 정의되는 데이터 단위 그 외에도 OSI의 각 계층에서 주고 받는 정보의 단위를 모두 패킷이라고 총칭하기도함 인터넷(Internet)에서는 IP 데이타그램을 패킷이라고 말함 헤더와 데이터로 구성됨 헤더 : 운송장, 데이터 : 물품 Packet Sniffing 네트워크 트래픽을 도청하고 민감한 정보를 수…","fields":{"slug":"/9-1/"},"frontmatter":{"date":"April 30, 2022","update":null,"title":"9-1","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"django.contrib.auth.models django.contrib.auth.models를 사용해 이미 만들어진 User모델을 가져와 사용할 수 있다 django.contrib.auth.models에서 직접 User model을 참조해오거나 getusermodel () 을 사용해서 유저 모델을 가져오거나 settings.py에 을 지정해서 유저 모…","fields":{"slug":"/auth-user/"},"frontmatter":{"date":"April 28, 2022","update":null,"title":"AUTH_USER_MODEL 사용","tags":["django"],"series":null}},{"excerpt":"7-1 스레드! 멀티스레드! 스레드를 어떻게 구현하는지! 스레드라는게 왜 나왔나요? cpu 하나의 성능 개선 : 한계에 다다름 cpu를 여러개? 멀티 코어 = 멀티 프로그래밍 여러개의 프로그램을 돌릴 수 있게 됨 A와 B가 각기 다른 일을 수행(멀티 프로그래밍) 여러 개의 책상에서 동일한 목표를 위해 일을 수행(멀티 쓰레드) 여러개의 코어에서 한 프로그램…","fields":{"slug":"/7-1/"},"frontmatter":{"date":"April 22, 2022","update":null,"title":"os 7-1","tags":["OS"],"series":null}},{"excerpt":"Combined Threads many to many 커널레벨모드도 유저레벨모드도 존재 유저가 나눠놓은 일의 단위와 cpu가 할당한 주체의 단위를 다르게 가져간다 커널은 사실상 스레드의 존재를 크게 의식하지않음 커널은 단지 유저에게 virtual processor같은. cpu코어같음 커널은 유저가 요청한대로 커널레벨스레드를 만들어주고 커널레벨스레드단위로 …","fields":{"slug":"/7-2/"},"frontmatter":{"date":"April 22, 2022","update":null,"title":"os 7-2","tags":["OS"],"series":null}},{"excerpt":"Critical Section Problem 동기화! 각 프로세스의 코드에는 크리티컬 섹션이 존재한다 critical section : 공유 데이터가 업데이트 일어나는 부분 entry section : 크리티컬 섹션에 들어가기위한 코드의 부분 exit section : 크리티컬 섹션에서 빠져나오기 위한 코드의 부분 remainder section : 크리…","fields":{"slug":"/8-1/"},"frontmatter":{"date":"April 22, 2022","update":null,"title":"os 8-1","tags":["OS"],"series":null}},{"excerpt":"Dispatcher os의 프로세스를 구동하는 부분의 가장 안쪽이다 디스패처의 역할! 어떤 프로세스를 돌리고 스탑, 상태 세이브 다른 프로세스의 스테이트를 로드해옴 switching context switching to user mode : 디스패처가 호출되는 시점은 커널모드.(os가 수행중) 바꿔주는 역할을 다 하고 나면 새로운 프로세스로 돌아가야함(유…","fields":{"slug":"/4-2/"},"frontmatter":{"date":"April 21, 2022","update":null,"title":"4-2","tags":["OS"],"series":"OS"}},{"excerpt":"DoS attack : 서비스 거부 공격 취약점 공격형 Boink, Bonk, TearDrop Land 자원 고갈형 Ping of death SYN flooding HTTP flooding Smurf Mail bomb TearDrop TCP 오류 제어 로직의 불완전한 구현을 악용 클라이언트 측에서 의도적으로 패킷의 시퀀스 넘버와 길이를 조작 패킷들이 부분…","fields":{"slug":"/7-1/"},"frontmatter":{"date":"April 20, 2022","update":null,"title":"7-1 DoS attack","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"Compilation System Compilation System Pre-processing : c코드 형태, #include, define등 전처리 컴파일러 : 어셈블리어 형태로 어셈블러 : 기계어 형태로 링커 : 여러 코드파일들을 하나의 실행파일로 합쳐줌 ex. printf.o + hello.o excutable 파일 text segement: 기계…","fields":{"slug":"/3-1/"},"frontmatter":{"date":"April 20, 2022","update":null,"title":"3-1","tags":["OS"],"series":"OS"}},{"excerpt":"Process 여기부터 중요하네 ... os는 프로세스를 중심으로 관리 Process Concept program은 passive process는 active 컴퓨터내에서 돌아가는 일의 단위 실행중인 프로그램 특정한 프로세스 상태를 갖는 컨텍스트 안에서 돌아가는 실행의 흐름 excution stream : 한줄한줄 실행하고있는 바로 그 상태! proces…","fields":{"slug":"/3-2/"},"frontmatter":{"date":"April 20, 2022","update":null,"title":"3-2 프로세스 탐구","tags":["OS"],"series":"OS"}},{"excerpt":"fork() fork()라는 system call은 new process를 생성한다 (cloning) system call : 사용자가 os커널한테 요청하는 api fork() process 현재 프로세스 중지하고 state를 저장 현재 프로세스의 code, data, stack, heap + pcb를 복사해서 새로운 프로세스를 생성 (전부 똑같은건 아니…","fields":{"slug":"/4-1/"},"frontmatter":{"date":"April 20, 2022","update":null,"title":"4-1","tags":["OS"],"series":"OS"}},{"excerpt":"Symmetic Cipher Model 대칭 암호 모델 시메트릭 : 대칭 어시메트릭 : 비대칭 고전 암호는 무조건 시메트릭이다 고전 암호는 크게 과 으로 나뉜다  : 평문을 치환 - 아예 다른 글자로 대체  : 평문안의 각 글자들을 지들끼리 위치 이동시킨다 은 아예 다른 글자로 바뀌지만 은 원래 있던 글자들은 유지된다 특징 : encryption 알고리즘…","fields":{"slug":"/3-2/"},"frontmatter":{"date":"April 18, 2022","update":null,"title":"3-2 Symmetic Cipher Model (고전 암호)","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"MITRE 미국의 비영리 단체로 보안에 대한 자료들이 올라와있음 CVE, CWE, CAPEC CVE 많이 나오는 공격들. 알려져있는 취약점 CWE CVE에 기반해서 만든 분류 체계 CAPEC 공격들을 추상화해서 신경써서 분석해야할 것들을 분류 OWASP (Open Web Application Securty Project) 웹 응용 보안을 다루는 오픈 커뮤…","fields":{"slug":"/5-1/"},"frontmatter":{"date":"April 18, 2022","update":"Apr 18, 2022","title":"5-1 Web Hacking Overview","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"AES 현대 Symmetic 암호는 Stream 암호와 Block암호로 구분된다 Block암호에는 대표적으로 AES가 있다 Advanced Encryption의 표준\nDES : 56bit크기의 key 키 크기가 작아서 취약\n키의 크기도 늘리고 성능 유지한게 AES AES structure  ➡  ➡  같은 input이라도 key값에 따라 output차이가…","fields":{"slug":"/5-2/"},"frontmatter":{"date":"April 18, 2022","update":"Apr 18, 2022","title":"5-2 AES Process","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"Multiple Encryption 암호화를 두 번 적용하면 더 강력해지지않을까? 를 실현! 암호화를 두 번 적용 - 키가 두 개 존재 K1를 써서 나온 결과에 또 K2를 써서 암호화 두 번  C = E(K2, E(K1, P )) P = D(K1, D(K2,C)) 파훼법: Meet in the Middle Attack 중간 결과 X = E(K1, P ) …","fields":{"slug":"/6-2/"},"frontmatter":{"date":"April 18, 2022","update":null,"title":"6-2 Modes of Operation","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"Malware (malicious software) 허가되지않은 일을 하기 위해 악의적으로 설계된 소프트웨어 (의도적이지 않은 결함은 bug라고 하며 멜웨어는 의도적인 소프트웨어) 트로이 목마 : 정상 프로그램으로 위장한 악성 프로그램 Root kit : 시스템의 root 권한을 획득하고 악성코드의 존재를 숨김 Backdoor : 정상 인증 절차를 우회하…","fields":{"slug":"/4-1/"},"frontmatter":{"date":"April 18, 2022","update":null,"title":"4-1 다양한 보안 위협","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"난수 생성 난수는 왜 필요? 그냥 대부분의 암호에 필요하다... 보통 key에 사용됨 암호의 안전성은 key에 기반하기때문에 key생성이 중요함 난수의 조건 Randomness  : 나올 수 있는 수들의 분포가 균일해야한다  : 서로 독립적. 긴 시퀀스로 봤을 때 부분 부분간의 연관관계가 없어야함. 반복되는 구간이 존재하지않는다. Unpredictabil…","fields":{"slug":"/7-2/"},"frontmatter":{"date":"April 18, 2022","update":null,"title":"7-2 난수 생성","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"Groups 두 가지에 대한 순서쌍 어떤 연산과 집합으로 합쳐서 정의  연산은 +도 될 수 있고 *도 될 수 있음. +일 경우엔 additive 그룹이라 부르고 * 경우엔 multiplicative 그룹이라고 부름 그룹을 만족시키는 필수 성질  : 닫혀있음 G안에 있는 a와 b가 있을 때 그 둘을 연산한 (a · b) 도 G안에 있어야한다  : 결합법칙 …","fields":{"slug":"/finite-field/"},"frontmatter":{"date":"April 18, 2022","update":null,"title":"4-2 finite field (Galois Field)","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"classification of Symmetric Encryption 현대에서 쓰이는 Symmetric Encryption은 Stream Cipher와 Block Cipher로 나뉜다.  Stream Cipher : key를 seed값으로 써서 bit stream generation 알고리즘을 돌림. 평문과 key를 연산 ideal case : One-t…","fields":{"slug":"/steam-block/"},"frontmatter":{"date":"April 18, 2022","update":"Apr 18, 2022","title":"4-2 Stream Cipher와 Block Cipher","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"APIView를 활용한 뷰 만들기 Serializer 정의 첫 번째 인자로 인스턴스를 받음 instance는 객체 post, put하는데 사용 두 번째 인자로 데이터를 받음 data는 form에서 requests.POST'name'가져오는것처럼 data를 받아오는 거인듯 Form 에서 첫 번째 인자는 data지만 시리얼라이저의 생성자의 첫 번째 인자는 i…","fields":{"slug":"/serializer/"},"frontmatter":{"date":"April 18, 2022","update":null,"title":"REST","tags":["django","DRF"],"series":"askcompany"}},{"excerpt":"보안이란? 자동화된 정보 시스템을 보호 정보 시스템 자원의 confidentiality, integrity, availability 보존 보안의 요구 조건 : CIA + AA 📌 기밀성 (Confidentiality)  중요한 정보가 허가받지않은 개인 주체에 의해서 공개되거나 가용될 수 없다. 허가받은 사람만 중요한 정보를 볼 수 있어야 한다    개인이…","fields":{"slug":"/cia-aa/"},"frontmatter":{"date":"April 16, 2022","update":null,"title":"1-1 컴퓨터 보안의 요구 조건 (CIA + AA)","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"Access Control 접근제어 시큐리티 서비스 중 한 가지 어떤 공격에 대응하는 가장 효율적인 방법 중 하나 공격이 일어나기 전에 막는다 어떤 access 권한들이 있고 어떻게 허용할 것인지 엄격하게 정의 인가되지않은 공개, 부적절한 변경으로부터 데이터와 리소스를 보호하는 절차 Access Control의 Security policy 📌 Discre…","fields":{"slug":"/1-2/"},"frontmatter":{"date":"April 16, 2022","update":null,"title":"1-2 Access Control","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"OSI 보안 구조 Security attack Security mechaism Security service Threat & Attack 📌 Security attack 💥 passive attack 공격이 일어난 뒤 시스템에 변형이 일어나지않음 두 가지 타입이 존재 release of message contents traffic analysis ex) …","fields":{"slug":"/osi-structure/"},"frontmatter":{"date":"April 16, 2022","update":null,"title":"1-1 OSI 보안 구조","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"Divisibility b는 0이 아니다 b는 a의 divisor, a는 b의 multiple ex) 17|0, -5|30 a|1 이면 a는 ±1 a|b, b|a 이면 a = ±b 0이 아닌 모든 정수 b는 0의 약수가 된다 ( 나머지가 0이긴하니까... ) b|g and b|h 이면 b|(mg + nh) Division Algorithm 📌 Euclid…","fields":{"slug":"/2-2/"},"frontmatter":{"date":"April 16, 2022","update":null,"title":"2-2 Number Theory","tags":["computer protection"],"series":"컴퓨터 보안"}},{"excerpt":"Background decision-making : data를 토대로 분석해 더 나은 방향 추진 buying pattenrn : 물건을 사는 패턴 분석 large-scale에서 중요한 역할 Feature of Data Mining : 미래 예측 ai가 나오면서 예측이 더 쉬워짐 visulaization : 시각화, 그래프나 도표 Approach of Da…","fields":{"slug":"/7-2/"},"frontmatter":{"date":"April 14, 2022","update":null,"title":"작성중","tags":["ai","inha"],"series":null}},{"excerpt":"Messages Framework 현재 User를 위한 1회성 메시지를 담는 용도  인스턴스를 통해 메시지를 남긴다. ​ 즉, View에서만 사용 가능 메시지는 1회 노출되고 사라진다 View를 통한 템플릿 시스템을 통해 노출을 하면 템플릿 내에서 JS를 통한 노출도 가능 Message Levels를 통한 메시지 분류 파이썬 로깅 모듈의 Level을 차용…","fields":{"slug":"/messages/"},"frontmatter":{"date":"April 13, 2022","update":null,"title":"Django의 Messages Framework","tags":["django","askcompany"],"series":"askcompany"}},{"excerpt":"CBV api 사용해보기2 : crud CreateView DeleteView","fields":{"slug":"/CBV-api2/"},"frontmatter":{"date":"April 13, 2022","update":null,"title":"CBV api 사용해보기2 : crud","tags":["django","python"],"series":"askcompany"}},{"excerpt":"HttpRequest를 받아 HttpResponse로 응답한다 HttpRequest 객체 **클라이언트로부터의 모든 요청 내용을 담고 있으며 ** 함수 기반 뷰 : 매 요청시마다 뷰 함수의 첫번째 인자 로 전달 클래스 기반 뷰 : 매 요청시마다 를 통해 접근 패킷 헤더 : get data는 헤더에만 필요한 정보가 있음. 바디 사용 x 공백 바디 : pos…","fields":{"slug":"/httprequest-httpresponse/"},"frontmatter":{"date":"April 12, 2022","update":null,"title":"HTTPRequest와 HttpResponse","tags":["django","askcompany"],"series":"askcompany"}},{"excerpt":"은 HTML Form Field들을 파이썬 클래스화 은 Database Field들을 파이썬 클래스화 시킨다 Form  은 과 달리 textfield가 없음 문자열은 그냥 문자열일뿐 ...  이런식으로 사용 ModelForm 을 지정하면 해당 의 field정보를 가져와서  filed를 구성해준다. 과 연결되어있기때문에 모델 세이브도 가능 Form Mode…","fields":{"slug":"/form-modelform/"},"frontmatter":{"date":"April 12, 2022","update":null,"title":"Django의 Form과 ModelForm","tags":["django","askcompany"],"series":"askcompany"}},{"excerpt":"필드 별로 유효성 검사 함수 추가 적용 MinLengthValidator가 이미 존재하긴함 모델단에도 설정 가능~ models.py에서 설정해 ModelForm에서 사용할수도있다 models.py forms.py 모델단에 지정한 validator를 ModelForm이 알아서 가져감 유효성 검사 호출 로직 form.is_valid() 가 호출되었을 때 1.…","fields":{"slug":"/clean-validators/"},"frontmatter":{"date":"April 12, 2022","update":null,"title":"장고 폼의 유효성 검사 : clean과 validators","tags":["django","askcompany"],"series":"askcompany"}},{"excerpt":"플렉스는 한 방향 레이아웃 시스템 그리드는 두 방향 (가로-세로) 레이아웃 시스템  그리드는 플렉스보다 더 복잡한 레이아웃 표현이 가능하다.  이와 같은 구조를 flex로 구현하려면 매우 힘듦...s 그러나 그리드로는 간단하게 구현 가능! 그리드는 어떻게 그리죠? 컨테이너 속성으로 격자를 만들고 아이템 속성으로 격자에 끼워 넣는다 1. 컨테이너 속성으로 …","fields":{"slug":"/grid/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"그리드를 어떻게 그리드라","tags":["css"],"series":null}},{"excerpt":"장식자(Decorators) 어떤 함수를 감싸는 (Wrapping) 함수 django.contrib.auth.decorators  : 로그아웃일 때 login_url로 redirect ex 1) ex 2)  : 지정 함수가 False를 반환하면 login_url로 redirect  : 지정 퍼미션이 없을 때 login_url로 redirect django…","fields":{"slug":"/view-decorators/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"decorator를 사용해서 Django view 꾸며보기","tags":["django","python"],"series":"askcompany"}},{"excerpt":"view는 무조건 HttpResponse객체를 반환해야한다. CBV Class Based View : View 함수를 만들어주는 클래스  클래스 함수를 통해, View 함수를 생성 상속을 통해 여러 기능들을 믹스인 CBV API Base views , ,  Generic display views ​ , , Generic date views Generic …","fields":{"slug":"/CBV-api/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"CBV api 사용해보기","tags":["django","python"],"series":"askcompany"}},{"excerpt":"python manage.py shell등을 사용해서 뻥튀기할 모델의 인스턴스를 아무거나 가져온 후  가져온 인스턴스의 pk를 None으로 만든다  그리고 인스턴스를 save 한다면?  짜잔~ 가져온 인스턴스와 내용이 똑같지만 pk는 다른 모델이 생성됩니다~ 물론 for문을 사용해서 한 번에 만들수도있음.","fields":{"slug":"/instance-flex/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"장고하다가 모델 인스턴스 뻥튀기 하고싶을때","tags":["django"],"series":null}},{"excerpt":"1. values_list 필드값을 인자로 넣어 생성된 모델 인스턴스들의 해당 필드값을 나열한다.   원래 튜플 형태로 출력되는데 flat = True 를 사용해서 튜플을 없앨 수 있다.  2. _ 이전 출력 결과를 다음 줄에서 _를 사용해 표현할 수 있다.","fields":{"slug":"/queryset/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"작성중 : 쓸만해보이는 쿼리셋팁","tags":["django","askcompany"],"series":"askcompany"}},{"excerpt":"HTTP 상태코드 웹서버는 적절한 상태코드로서 응당해야한다 각 HttpResponse 클래스마다 고유한 status_code가 할당 REST API를 만들 때 유용 # response.py HTTP METHOD별 다양한 상태 코드 GET 일반적으로 200(OK) 응답, 리소스를 못 찾을 경우 404(Not Found) 응답 POST 201(Created)…","fields":{"slug":"/http-status-code/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"HTTP 상태 코드","tags":["django","askcompany"],"series":"askcompany"}},{"excerpt":"getabsoluteurl  식으로 사용하던 것을  , 와 같이 사용 가능 모델 클래스에 을 구현한다. 장고 템플릿 태그 주석 : {# #}","fields":{"slug":"/get-absolute-url/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"detail url을 간단하게 하고싶다면, get_absolute_url","tags":["django","askcompany"],"series":"askcompany"}},{"excerpt":"JSON 응답뷰 만들기 router를 사용해 두 개의 url생성 urls.py +HTTPie  JSON 직렬화 모든 프로그래밍 언어의 통신에서 데이터는 필히 문자열로 표현되어야함. 송신자 : 객체를 문자열로 반환하여 데이터 전송 - 직렬화 수신자: 수신한 문자열을 다시 객체로 변환하여 활용 - 비직렬화 쿼리셋타입의 객체 를 json으로 직렬화한다면? 에러…","fields":{"slug":"/json/"},"frontmatter":{"date":"April 07, 2022","update":null,"title":"작성중 : json 응답뷰 만들기","tags":["django","DRF"],"series":"askcompany"}},{"excerpt":"큐마다 다른 폴리시 - 멀티레벨 큐 어떤 프로세스가 cpu바운드인지 io바운드인지 알 수 있? 그냥 프로세스만 받아서는 알기 어려움 멀티레벨큐 : 사용어렵 잘 설계해야함 멀티레벨 피드백 큐 여러 개의 큐를 두고 각각의 큐에 대해서 서로 다른 스케줄링 알고리즘을 가져감 프로세스가 여러가지 큐를 옮겨 다닐 수 있음 어떻게 옮겨가는가? 사용자가 결정해야함 피드…","fields":{"slug":"/6-2/"},"frontmatter":{"date":"April 06, 2022","update":null,"title":"os 6-2","tags":["OS"],"series":null}},{"excerpt":"1. Static과 Media란? - Static 파일 ​ 개발 리소스로서의 정적인 파일(css, js, image등) ​ 앱/프로젝트 단위로 저장&서빙 - Media 파일 ​ FileField/ImageField를 통해 저장한 모든 파일 ​ DB필드에는 저장 경로를 저장하며 파일은 파일 스토리지에 저장 ​ 프로젝트 단위로 저장&서빙 static 파일은 …","fields":{"slug":"/static-media/"},"frontmatter":{"date":"April 05, 2022","update":null,"title":"django의 Static & Media 파일","tags":["django"],"series":"askcompany"}},{"excerpt":"Django admin admin 등록 방법 (1) 기본 ModelAdmin으로 동작 admin 등록 방법 (2) 지정한 ModelAdmin으로 동작 admin 등록 방법 (3) python wrapping 파이썬의 장식자 문법 감싼 대상의 기능을 변경할 수 있다. admin에서 표기되는 모델 객체명 바꾸기 admin에서 모델 객체의 이름은 모델명 obj…","fields":{"slug":"/django-admin/"},"frontmatter":{"date":"April 05, 2022","update":null,"title":"django ORM","tags":["django"],"series":"askcompany"}},{"excerpt":"작성중 1. RESTful API의 몇 가지 디자인 원칙 리소스(모델등)를 중심으로 디자인 클라이언트에서 엑세스 할 수 있는 모든 종류의 개체/ 서비스가 리소스에 포함 리소스마다 해당 리소스를 고유하게 식별하는 식별자 존재 ex)  요청/응답 포맷으로 흔히 JSON 사용 균일한(uniform) 인터페이스를 적용 리소스에 표준 HTTP 동사(GET, POS…","fields":{"slug":"/rest/"},"frontmatter":{"date":"April 04, 2022","update":null,"title":"REST","tags":["django","DRF"],"series":"askcompany"}},{"excerpt":"Minimax Algorithm max와 min을 번갈아가며 각 state에서 최선의 선택지를 고른다. max(빨간색)단에서는 최대값을 올려보내고 min(파란색)단에서는 최소값을 올려보낸다. 위 사진의 경우 차례대로 0,1,2,3 depth라고 할 때 max(빨간색)단인 2 depth에서 1과 8중 최대값인 8이 올라간다 min(파란색)단인 1 depth…","fields":{"slug":"/alpha-beta-pruning/"},"frontmatter":{"date":"April 04, 2022","update":null,"title":"Minimax 알고리즘 & alpha-beta 가지치기","tags":["ai","inha"],"series":null}},{"excerpt":"Meta 클래스란? 모델 내부에 정의되는 클래스로 Django모델 자체에 대한 정보, 속성을 추가하는 클래스이다. Meta 클래스는 권한, 데이터베이스의 이름, 단 복수 이름, 추상화, 순서 지정등과 같은 모델에 대한 다양한 사항을 정의하는데 사용할 수 있다. 다음은 Meta 클래스 활용 예시이다. 1. abstract 모델이 추상적인지를 결정한다. 추상…","fields":{"slug":"/meta-class/"},"frontmatter":{"date":"April 03, 2022","update":null,"title":"Django의 Meta 클래스 활용","tags":["django"],"series":null}},{"excerpt":"container와 item flex하기전 알아야할 컨테이너와 아이템\n컨테이너가 전체 박스\n아이템이 컨테이너 안에 있는 요소 flex를 사용해서 정렬해주려면 컨테이너에 속성을 추가해준다. 주축 flex-direction속성으로 flex의 주축을 설정할 수 있다 row row-reverse column column-reverse 주축을 기준으로 정렬할때는 …","fields":{"slug":"/flex/"},"frontmatter":{"date":"April 02, 2022","update":null,"title":"flex 해보기 ㅎㅎ","tags":["css"],"series":null}},{"excerpt":"스케줄링 policy : CPU를 누구한테 할당할까\n하나의 응용프로그램이 있을때 시피유 버스트와 아이오 버스트로 나뉨.\n각각의 프로세스마다 시피유 버스타한 부분이 있을텐데 이를 어떻게 시피유에 할당해주냐 FCFS 가장 간단한 방법. 줄 선 순서대로. 먼저 온 프로세스부터 처리 하나의 cpu burst한 부분을 단위로 cpu 스케줄링을 함 24, 3, 3 …","fields":{"slug":"/5-2/"},"frontmatter":{"date":"March 30, 2022","update":null,"title":"OS 스케줄링","tags":["OS"],"series":"OS"}},{"excerpt":"📌 Interrupt CPU 외부에서 CPU한테 이벤트를 알려주면서 CPU를 멈추게함\n각각의 인터럽트는 cpu가 수행할 인터럽트 서비스 루틴(ISR)이 존재 특정 인터럽트가 오면 그에 해당하는 ISR이 실행된다 Interrupt vector : inturrupt와 ISR을 매칭시켜놓음. 모든 서비스 루틴에 대한 주소를 가지고 있음. cpu 내에서 일어난건…","fields":{"slug":"/interrupts-mechanism/"},"frontmatter":{"date":"March 30, 2022","update":null,"title":"2-2 Interrupt 메카니즘","tags":["OS"],"series":"OS"}},{"excerpt":"OS(운영체제)란? 컴퓨터 시스템의 자원들을 효율적으로 관리하며 사용자가 컴퓨터를 편리하고, 효과적으로 사용할 수 있도록 환경을 제공하는 여러 프로그램의 모임.\n사용자와 하드웨어간의 인터페이스로서 동작하는 시스템 소프트웨어의 일종으로, 다른 응용프로그램이 유용한 작업을 할 수 있도록 환경을 제공해줌.\nex) Windows, Linux OS의 역할 reso…","fields":{"slug":"/1-2/"},"frontmatter":{"date":"March 29, 2022","update":null,"title":"OS의 역할과 역사","tags":["OS"],"series":"OS"}},{"excerpt":"1. OS의 구조  GUI : 그래픽 UI ex. 마우스 커서 command line : 커맨드입력창 시스템콜 : os 내부 기능 활용 커널(그림의 services) 2. 컴퓨터 하드웨어 CPU DISK disk controller memory 📌 bus\n등등... System bus Data bus\n서로 데이터를 주고받음 Command/Address b…","fields":{"slug":"/os-structure/"},"frontmatter":{"date":"March 29, 2022","update":null,"title":"2-1 OS의 구조","tags":["OS"],"series":"OS"}},{"excerpt":"장고 모델 <데이터베이스 테이블>과 <파이썬 클래스>를 1대1로 매핑 모델 클래스명은 단수형으로 지정\nex) Posts(x) Post(o) 첫 글자는 대문자 - PascalCase 네이밍 장고 모델을 통해 데이터베이스 형상을 관리할 경우 모델 클래스 작성 모델 클래스로부터 마이그레이션 파일 생성 : makemigrations 마이그레이션 파일을 데이터베이…","fields":{"slug":"/django-ORM/"},"frontmatter":{"date":"March 28, 2022","update":null,"title":"django ORM","tags":["django"],"series":"askcompany"}},{"excerpt":"에러내용 git push 전 pull 했는데 fatal: refusing to merge unrelated histories 오류가 날 때 깃허브 레파지토리를 먼저 만들고 로컬에서 프로젝트 생성 후 푸쉬하려고 할 때 두 프로젝트를 다른 것으로 인식해서 나는 에러 해결방법 --allow-unrelated-histories 독립적인 두 프로젝트를 병합하는 명…","fields":{"slug":"/1/"},"frontmatter":{"date":"March 27, 2022","update":null,"title":"git pull 오류 : fatal: refusing to merge unrelated histories","tags":["ERROR"],"series":null}},{"excerpt":"1. 패키지 다운로드 CORS란?\n동일한 출처의 리소스에만 접근하도록 제한하는 것. 프로토콜, 호스트명, 포트번호가 모두 같아야함.\nDjango 서버는 127.0.0.1:8000에서 실행되고 React서버는 127.0.0.1:3000에서 실행된다.\n두 서버의 포트번호가 다르기때문에 CORS 에러가 발생! 2. Django project의 settings.…","fields":{"slug":"/initial-settings/"},"frontmatter":{"date":"March 26, 2022","update":null,"title":"Django REST Framework와 React 연동 첫걸음! 초기세팅을 해보자!","tags":["DRF","React"],"series":"미오새"}}]}},"pageContext":{}},"staticQueryHashes":[]}