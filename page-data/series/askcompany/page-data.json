{"componentChunkName":"component---src-templates-series-jsx","path":"/series/askcompany","result":{"data":{"posts":{"nodes":[{"excerpt":"장고 모델 <데이터베이스 테이블>과 <파이썬 클래스>를 1대1로 매핑 모델 클래스명은 단수형으로 지정\nex) Posts(x) Post(o) 첫 글자는 대문자 - PascalCase 네이밍 장고 모델을 통해 데이터베이스 형상을 관리할 경우 모델 클래스 작성 모델 클래스로부터 마이그레이션 파일 생성 : makemigrations 마이그레이션 파일을 데이터베이…","fields":{"slug":"/django-ORM/"},"frontmatter":{"date":"March 28, 2022","update":null,"title":"django ORM","tags":["django"]}},{"excerpt":"작성중 1. RESTful API의 몇 가지 디자인 원칙 리소스(모델등)를 중심으로 디자인 클라이언트에서 엑세스 할 수 있는 모든 종류의 개체/ 서비스가 리소스에 포함 리소스마다 해당 리소스를 고유하게 식별하는 식별자 존재 ex)  요청/응답 포맷으로 흔히 JSON 사용 균일한(uniform) 인터페이스를 적용 리소스에 표준 HTTP 동사(GET, POS…","fields":{"slug":"/rest/"},"frontmatter":{"date":"April 04, 2022","update":null,"title":"REST","tags":["django","DRF"]}},{"excerpt":"Django admin admin 등록 방법 (1) 기본 ModelAdmin으로 동작 admin 등록 방법 (2) 지정한 ModelAdmin으로 동작 admin 등록 방법 (3) python wrapping 파이썬의 장식자 문법 감싼 대상의 기능을 변경할 수 있다. admin에서 표기되는 모델 객체명 바꾸기 admin에서 모델 객체의 이름은 모델명 obj…","fields":{"slug":"/django-admin/"},"frontmatter":{"date":"April 05, 2022","update":null,"title":"django ORM","tags":["django"]}},{"excerpt":"1. Static과 Media란? - Static 파일 ​ 개발 리소스로서의 정적인 파일(css, js, image등) ​ 앱/프로젝트 단위로 저장&서빙 - Media 파일 ​ FileField/ImageField를 통해 저장한 모든 파일 ​ DB필드에는 저장 경로를 저장하며 파일은 파일 스토리지에 저장 ​ 프로젝트 단위로 저장&서빙 static 파일은 …","fields":{"slug":"/static-media/"},"frontmatter":{"date":"April 05, 2022","update":null,"title":"django의 Static & Media 파일","tags":["django"]}},{"excerpt":"JSON 응답뷰 만들기 router를 사용해 두 개의 url생성 urls.py +HTTPie  JSON 직렬화 모든 프로그래밍 언어의 통신에서 데이터는 필히 문자열로 표현되어야함. 송신자 : 객체를 문자열로 반환하여 데이터 전송 - 직렬화 수신자: 수신한 문자열을 다시 객체로 변환하여 활용 - 비직렬화 쿼리셋타입의 객체 를 json으로 직렬화한다면? 에러…","fields":{"slug":"/json/"},"frontmatter":{"date":"April 07, 2022","update":null,"title":"작성중 : json 응답뷰 만들기","tags":["django","DRF"]}},{"excerpt":"getabsoluteurl {% raw %}\n 식으로 사용하던 것을  , 와 같이 사용 가능 모델 클래스에 을 구현한다.\n{% endraw %} 장고 템플릿 태그 주석 : {# #}","fields":{"slug":"/get-absolute-url/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"detail url을 간단하게 하고싶다면, get_absolute_url","tags":["django","askcompany"]}},{"excerpt":"HTTP 상태코드 웹서버는 적절한 상태코드로서 응당해야한다 각 HttpResponse 클래스마다 고유한 status_code가 할당 REST API를 만들 때 유용 # response.py HTTP METHOD별 다양한 상태 코드 GET 일반적으로 200(OK) 응답, 리소스를 못 찾을 경우 404(Not Found) 응답 POST 201(Created)…","fields":{"slug":"/http-status-code/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"HTTP 상태 코드","tags":["django","askcompany"]}},{"excerpt":"1. values_list 필드값을 인자로 넣어 생성된 모델 인스턴스들의 해당 필드값을 나열한다.   원래 튜플 형태로 출력되는데 flat = True 를 사용해서 튜플을 없앨 수 있다.  2. _ 이전 출력 결과를 다음 줄에서 _를 사용해 표현할 수 있다.","fields":{"slug":"/queryset/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"작성중 : 쓸만해보이는 쿼리셋팁","tags":["django","askcompany"]}},{"excerpt":"view는 무조건 HttpResponse객체를 반환해야한다. CBV Class Based View : View 함수를 만들어주는 클래스  클래스 함수를 통해, View 함수를 생성 상속을 통해 여러 기능들을 믹스인 CBV API Base views , ,  Generic display views ​ , , Generic date views Generic …","fields":{"slug":"/CBV-api/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"CBV api 사용해보기","tags":["django","python"]}},{"excerpt":"장식자(Decorators) 어떤 함수를 감싸는 (Wrapping) 함수 django.contrib.auth.decorators  : 로그아웃일 때 login_url로 redirect ex 1) ex 2)  : 지정 함수가 False를 반환하면 login_url로 redirect  : 지정 퍼미션이 없을 때 login_url로 redirect django…","fields":{"slug":"/view-decorators/"},"frontmatter":{"date":"April 10, 2022","update":null,"title":"decorator를 사용해서 Django view 꾸며보기","tags":["django","python"]}},{"excerpt":"HttpRequest를 받아 HttpResponse로 응답한다 HttpRequest 객체 **클라이언트로부터의 모든 요청 내용을 담고 있으며 ** 함수 기반 뷰 : 매 요청시마다 뷰 함수의 첫번째 인자 로 전달 클래스 기반 뷰 : 매 요청시마다 를 통해 접근 패킷 헤더 : get data는 헤더에만 필요한 정보가 있음. 바디 사용 x 공백 바디 : pos…","fields":{"slug":"/httprequest-httpresponse/"},"frontmatter":{"date":"April 12, 2022","update":null,"title":"HTTPRequest와 HttpResponse","tags":["django","askcompany"]}},{"excerpt":"필드 별로 유효성 검사 함수 추가 적용 MinLengthValidator가 이미 존재하긴함 모델단에도 설정 가능~ models.py에서 설정해 ModelForm에서 사용할수도있다 models.py forms.py 모델단에 지정한 validator를 ModelForm이 알아서 가져감 유효성 검사 호출 로직 form.is_valid() 가 호출되었을 때 1.…","fields":{"slug":"/clean-validators/"},"frontmatter":{"date":"April 12, 2022","update":null,"title":"장고 폼의 유효성 검사 : clean과 validators","tags":["django","askcompany"]}},{"excerpt":"은 HTML Form Field들을 파이썬 클래스화 은 Database Field들을 파이썬 클래스화 시킨다 Form  은 과 달리 textfield가 없음 문자열은 그냥 문자열일뿐 ...  이런식으로 사용 ModelForm 을 지정하면 해당 의 field정보를 가져와서  filed를 구성해준다. 과 연결되어있기때문에 모델 세이브도 가능 Form Mode…","fields":{"slug":"/form-modelform/"},"frontmatter":{"date":"April 12, 2022","update":null,"title":"Django의 Form과 ModelForm","tags":["django","askcompany"]}},{"excerpt":"CBV api 사용해보기2 : crud CreateView DeleteView","fields":{"slug":"/CBV-api2/"},"frontmatter":{"date":"April 13, 2022","update":null,"title":"CBV api 사용해보기2 : crud","tags":["django","python"]}},{"excerpt":"Messages Framework 현재 User를 위한 1회성 메시지를 담는 용도  인스턴스를 통해 메시지를 남긴다. ​ 즉, View에서만 사용 가능 메시지는 1회 노출되고 사라진다 View를 통한 템플릿 시스템을 통해 노출을 하면 템플릿 내에서 JS를 통한 노출도 가능 Message Levels를 통한 메시지 분류 파이썬 로깅 모듈의 Level을 차용…","fields":{"slug":"/messages/"},"frontmatter":{"date":"April 13, 2022","update":null,"title":"Django의 Messages Framework","tags":["django","askcompany"]}},{"excerpt":"APIView를 활용한 뷰 만들기 Serializer 정의 첫 번째 인자로 인스턴스를 받음 instance는 객체 post, put하는데 사용 두 번째 인자로 데이터를 받음 data는 form에서 requests.POST'name'가져오는것처럼 data를 받아오는 거인듯 Form 에서 첫 번째 인자는 data지만 시리얼라이저의 생성자의 첫 번째 인자는 i…","fields":{"slug":"/serializer/"},"frontmatter":{"date":"April 18, 2022","update":null,"title":"REST","tags":["django","DRF"]}},{"excerpt":"Django 로그인 처리 Django자체에 디폴트로 로 처리되어있다 장고의  를 활용해서 설정","fields":{"slug":"/LoginView/"},"frontmatter":{"date":"May 01, 2022","update":null,"title":"Django LoginView 사용","tags":["django","python"]}}]}},"pageContext":{"series":"askcompany"}},"staticQueryHashes":[]}