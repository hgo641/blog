{"componentChunkName":"component---src-templates-post-jsx","path":"/form-modelform/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"e3bfa53a-3d48-554e-beb7-4648630c16d0","excerpt":"은 HTML Form Field들을 파이썬 클래스화 은 Database Field들을 파이썬 클래스화 시킨다 Form  은 과 달리 textfield가 없음 문자열은 그냥 문자열일뿐 ...  이런식으로 사용 ModelForm 을 지정하면 해당 의 field정보를 가져와서  filed를 구성해준다. 과 연결되어있기때문에 모델 세이브도 가능 Form Mode…","html":"<p><code class=\"language-text\">Form</code>은 <strong>HTML Form Field들을 파이썬 클래스화</strong></p>\n<p><code class=\"language-text\">Model</code>은 <strong>Database Field들을 파이썬 클래스화</strong> 시킨다</p>\n<h2>Form</h2>\n<hr>\n<p><code class=\"language-text\">Form</code> 은 <code class=\"language-text\">Model</code>과 달리 textfield가 없음</p>\n<p>문자열은 그냥 문자열일뿐 ...</p>\n<p><code class=\"language-text\">content = forms.CharField(widget=form.Textarea)</code></p>\n<p>이런식으로 사용</p>\n<h2>ModelForm</h2>\n<hr>\n<p><code class=\"language-text\">Model</code>을 지정하면 해당 <code class=\"language-text\">Model</code>의 field정보를 가져와서 <code class=\"language-text\">Form</code> filed를 구성해준다.</p>\n<p><code class=\"language-text\">Model</code>과 연결되어있기때문에 모델 세이브도 가능</p>\n<h1>Form</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django <span class=\"token keyword\">import</span> forms\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PostForm</span><span class=\"token punctuation\">(</span>forms<span class=\"token punctuation\">.</span>Form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    title <span class=\"token operator\">=</span> forms<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> forms<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>widget<span class=\"token operator\">=</span>form<span class=\"token punctuation\">.</span>Textarea<span class=\"token punctuation\">)</span></code></pre></div>\n<h1>ModelForm</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django <span class=\"token keyword\">import</span> forms\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Post\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PostForm</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">.</span>ModelForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Post\n        fields <span class=\"token operator\">=</span> <span class=\"token string\">'__all__'</span>\n        <span class=\"token comment\">#fields = ['title', 'content']</span></code></pre></div>\n<p>form의 유효성 검사는 fields에 한해서 검사한다.</p>\n<h4>View에서 ModelForm 활용</h4>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">post_new</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">:</span>\n        form <span class=\"token operator\">=</span> PostForm<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">.</span>FILES<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#파일은 받지않는다면 request.FILES 없어도 됨</span>\n        <span class=\"token keyword\">if</span> form<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            post <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#모델폼은 바로 모델save가능</span>\n            <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        form <span class=\"token operator\">=</span> PostForm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'myapp/post_form.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'form'</span> <span class=\"token punctuation\">:</span> form<span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>Model Form save함수의 인자commit</h4>\n<p># ex) post 작성시 author 입력은 없애고 싶으나 author이 필수항목일 때</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">post <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>commit <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\npost<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>user\n<span class=\"token comment\">#author입력이 안된 form이 오므로 author를 지정해주고 save</span>\npost<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>True</strong>가 <strong>default</strong></p>\n<p><strong>False</strong>로 준다면 <strong>.save()</strong>를 실행하지않는다.</p>\n<p>​ instance.save() 함수 호출을 지연시키고자 할 때 사용한다. (save하긴해야함)</p>\n<p>​ 모델 인스턴스는 만들어졌으나 실제 db에 모델이 생성되지않음</p>","frontmatter":{"title":"Django의 Form과 ModelForm","date":"April 12, 2022","update":null,"tags":["django","askcompany"],"series":"askcompany"},"fields":{"slug":"/form-modelform/","readingTime":{"minutes":1.81}}},"seriesList":{"edges":[{"node":{"id":"8c418e59-f9a5-5fdb-8f42-e3dff2ff08a9","fields":{"slug":"/django-ORM/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"3fab5510-8f86-511d-b0a7-6031ea7f95f8","fields":{"slug":"/rest/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"e41b821c-ba53-5e84-a1ae-c7c4cba634b5","fields":{"slug":"/static-media/"},"frontmatter":{"title":"django의 Static & Media 파일"}}},{"node":{"id":"32500d0b-16dd-5e7c-a16c-b45dd8cf9f0c","fields":{"slug":"/django-admin/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"c52011a6-a94e-5aa8-9612-9c3a352654e9","fields":{"slug":"/json/"},"frontmatter":{"title":"작성중 : json 응답뷰 만들기"}}},{"node":{"id":"97fa8fe6-4603-5a9f-b2f0-c32be0c80118","fields":{"slug":"/view-decorators/"},"frontmatter":{"title":"decorator를 사용해서 Django view 꾸며보기"}}},{"node":{"id":"125af04d-f31e-5dd0-8176-39fec9d54510","fields":{"slug":"/CBV-api/"},"frontmatter":{"title":"CBV api 사용해보기"}}},{"node":{"id":"34e238b9-dd92-5457-846a-8b6d13e76798","fields":{"slug":"/queryset/"},"frontmatter":{"title":"작성중 : 쓸만해보이는 쿼리셋팁"}}},{"node":{"id":"cdf383e6-f2a6-5939-8887-e7501d318084","fields":{"slug":"/http-status-code/"},"frontmatter":{"title":"HTTP 상태 코드"}}},{"node":{"id":"8f38a40f-0d0e-5e23-9922-b0286f3b8a2b","fields":{"slug":"/get-absolute-url/"},"frontmatter":{"title":"detail url을 간단하게 하고싶다면, get_absolute_url"}}},{"node":{"id":"9ea22a57-02a3-5785-af73-eaabf2a736b4","fields":{"slug":"/httprequest-httpresponse/"},"frontmatter":{"title":"HTTPRequest와 HttpResponse"}}},{"node":{"id":"e3bfa53a-3d48-554e-beb7-4648630c16d0","fields":{"slug":"/form-modelform/"},"frontmatter":{"title":"Django의 Form과 ModelForm"}}},{"node":{"id":"6fb810bb-d784-5bde-8528-947db9b3fd9f","fields":{"slug":"/clean-validators/"},"frontmatter":{"title":"장고 폼의 유효성 검사 : clean과 validators"}}},{"node":{"id":"1f084815-ec52-5f58-a947-ec38e1f5a9f0","fields":{"slug":"/messages/"},"frontmatter":{"title":"Django의 Messages Framework"}}},{"node":{"id":"24b75555-99e9-5cf5-b345-7f02926c7b6d","fields":{"slug":"/CBV-api2/"},"frontmatter":{"title":"CBV api 사용해보기2 : crud"}}},{"node":{"id":"c2a4c8ba-644c-5a2e-a5fb-fefc3d400a11","fields":{"slug":"/serializer/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"71a681c8-2fc0-5652-ba2c-5ad25267c318","fields":{"slug":"/LoginView/"},"frontmatter":{"title":"Django LoginView 사용"}}}]},"previous":{"fields":{"slug":"/httprequest-httpresponse/"},"frontmatter":{"title":"HTTPRequest와 HttpResponse"}},"next":{"fields":{"slug":"/clean-validators/"},"frontmatter":{"title":"장고 폼의 유효성 검사 : clean과 validators"}}},"pageContext":{"id":"e3bfa53a-3d48-554e-beb7-4648630c16d0","series":"askcompany","previousPostId":"9ea22a57-02a3-5785-af73-eaabf2a736b4","nextPostId":"6fb810bb-d784-5bde-8528-947db9b3fd9f"}},"staticQueryHashes":[]}