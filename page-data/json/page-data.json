{"componentChunkName":"component---src-templates-post-jsx","path":"/json/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"c52011a6-a94e-5aa8-9612-9c3a352654e9","excerpt":"JSON 응답뷰 만들기 router를 사용해 두 개의 url생성 urls.py +HTTPie  JSON 직렬화 모든 프로그래밍 언어의 통신에서 데이터는 필히 문자열로 표현되어야함. 송신자 : 객체를 문자열로 반환하여 데이터 전송 - 직렬화 수신자: 수신한 문자열을 다시 객체로 변환하여 활용 - 비직렬화 쿼리셋타입의 객체 를 json으로 직렬화한다면? 에러…","html":"<h3>JSON 응답뷰 만들기</h3>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostViewSet</span><span class=\"token punctuation\">(</span>ModelViewSet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queryset <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 다룰 데이터의 범위</span>\n    serializer_class <span class=\"token operator\">=</span> PostSerializer</code></pre></div>\n<p>router를 사용해 두 개의 url생성</p>\n<blockquote>\n<p>urls.py</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>routers <span class=\"token keyword\">import</span> DefaultRouter\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> views\n\nrouter <span class=\"token operator\">=</span> DefaultRouter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nrouter<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>PostViewSet<span class=\"token punctuation\">)</span> <span class=\"token comment\">#2개의 URL을 만들어줌</span>\n<span class=\"token comment\">#router.urls에 리스트 형태로 2개의 패턴이 생김 url pattern list</span>\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> include<span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>+HTTPie</p>\n<p><code class=\"language-text\">pip install httpie</code></p>\n<h3>JSON 직렬화</h3>\n<hr>\n<p>모든 프로그래밍 언어의 통신에서 데이터는 필히 문자열로 표현되어야함.</p>\n<p>송신자 : 객체를 문자열로 반환하여 데이터 전송 - 직렬화</p>\n<p>수신자: 수신한 문자열을 다시 객체로 변환하여 활용 - 비직렬화</p>\n<p>쿼리셋타입의 객체 를 json으로 직렬화한다면?</p>\n<p>에러 - 룰추가 필요</p>\n<p>list/dick/set comprehension</p>\n<ol>\n<li>직접 변환</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span>post<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">:</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">:</span>post<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> post <span class=\"token keyword\">in</span> Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span>\n\njson<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>번거로움</p>\n<ol start=\"2\">\n<li>직접변환 룰 지정</li>\n</ol>","frontmatter":{"title":"작성중 : json 응답뷰 만들기","date":"April 07, 2022","update":null,"tags":["django","DRF"],"series":"askcompany"},"fields":{"slug":"/json/","readingTime":{"minutes":1.16}}},"seriesList":{"edges":[{"node":{"id":"8c418e59-f9a5-5fdb-8f42-e3dff2ff08a9","fields":{"slug":"/django-ORM/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"3fab5510-8f86-511d-b0a7-6031ea7f95f8","fields":{"slug":"/rest/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"e41b821c-ba53-5e84-a1ae-c7c4cba634b5","fields":{"slug":"/static-media/"},"frontmatter":{"title":"django의 Static & Media 파일"}}},{"node":{"id":"32500d0b-16dd-5e7c-a16c-b45dd8cf9f0c","fields":{"slug":"/django-admin/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"c52011a6-a94e-5aa8-9612-9c3a352654e9","fields":{"slug":"/json/"},"frontmatter":{"title":"작성중 : json 응답뷰 만들기"}}},{"node":{"id":"97fa8fe6-4603-5a9f-b2f0-c32be0c80118","fields":{"slug":"/view-decorators/"},"frontmatter":{"title":"decorator를 사용해서 Django view 꾸며보기"}}},{"node":{"id":"125af04d-f31e-5dd0-8176-39fec9d54510","fields":{"slug":"/CBV-api/"},"frontmatter":{"title":"CBV api 사용해보기"}}},{"node":{"id":"34e238b9-dd92-5457-846a-8b6d13e76798","fields":{"slug":"/queryset/"},"frontmatter":{"title":"작성중 : 쓸만해보이는 쿼리셋팁"}}},{"node":{"id":"cdf383e6-f2a6-5939-8887-e7501d318084","fields":{"slug":"/http-status-code/"},"frontmatter":{"title":"HTTP 상태 코드"}}},{"node":{"id":"8f38a40f-0d0e-5e23-9922-b0286f3b8a2b","fields":{"slug":"/get-absolute-url/"},"frontmatter":{"title":"detail url을 간단하게 하고싶다면, get_absolute_url"}}},{"node":{"id":"9ea22a57-02a3-5785-af73-eaabf2a736b4","fields":{"slug":"/httprequest-httpresponse/"},"frontmatter":{"title":"HTTPRequest와 HttpResponse"}}},{"node":{"id":"e3bfa53a-3d48-554e-beb7-4648630c16d0","fields":{"slug":"/form-modelform/"},"frontmatter":{"title":"Django의 Form과 ModelForm"}}},{"node":{"id":"6fb810bb-d784-5bde-8528-947db9b3fd9f","fields":{"slug":"/clean-validators/"},"frontmatter":{"title":"장고 폼의 유효성 검사 : clean과 validators"}}},{"node":{"id":"1f084815-ec52-5f58-a947-ec38e1f5a9f0","fields":{"slug":"/messages/"},"frontmatter":{"title":"Django의 Messages Framework"}}},{"node":{"id":"24b75555-99e9-5cf5-b345-7f02926c7b6d","fields":{"slug":"/CBV-api2/"},"frontmatter":{"title":"CBV api 사용해보기2 : crud"}}},{"node":{"id":"c2a4c8ba-644c-5a2e-a5fb-fefc3d400a11","fields":{"slug":"/serializer/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"71a681c8-2fc0-5652-ba2c-5ad25267c318","fields":{"slug":"/LoginView/"},"frontmatter":{"title":"Django LoginView 사용"}}}]},"previous":{"fields":{"slug":"/6-2/"},"frontmatter":{"title":"os 6-2"}},"next":{"fields":{"slug":"/grid/"},"frontmatter":{"title":"그리드를 어떻게 그리드라"}}},"pageContext":{"id":"c52011a6-a94e-5aa8-9612-9c3a352654e9","series":"askcompany","previousPostId":"7c43173d-c487-5074-806f-7e56f8eeba7b","nextPostId":"3dfd35bf-9f06-57e0-8aae-bbe57bac7616"}},"staticQueryHashes":[]}