{"componentChunkName":"component---src-templates-post-jsx","path":"/select/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"af42b98e-18d6-5b90-8c7a-2520779b161b","excerpt":"SELECT (1) 📌 예제 하위질의 : 조건절에 주어진 질의를 먼저 수행하여 그 검색 결고를 조건절의 피연산자로 활용한다. EXIST : 하위질의로 검색된 결과가 존재하는지 확인할 때 쓴다... 위 예시의 경우 사원테이블의 이름이 여가활동의 이름에도 있는지 확인하고, 두 테이블에 이름이 존재하는 사원의 이름과 주소를 출력한다. SELECT (2) 그룹함…","html":"<h2>SELECT (1)</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">FROM</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">[</span><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">[</span><span class=\"token keyword\">HAVING</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h4>📌 예제</h4>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 이름 <span class=\"token operator\">+</span> <span class=\"token string\">'의 월급'</span> <span class=\"token keyword\">AS</span> 이름<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> 기본급 <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token keyword\">AS</span> 기본급<span class=\"token number\">2</span>\n<span class=\"token keyword\">FROM</span> 사원</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> 부서 <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'기획'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'마케팅'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> 이름 <span class=\"token operator\">LIKE</span> <span class=\"token string\">'김_'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> 이름 <span class=\"token operator\">LIKE</span> <span class=\"token string\">'김%'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> 경력 <span class=\"token operator\">LIKE</span> <span class=\"token string\">'1#'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> 생일 <span class=\"token operator\">BETWEEN</span> <span class=\"token comment\">#010169# AND #12/31/73#</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> 주소 <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> 주소 <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">TOP</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 경력 <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span> 생일 <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>하위질의 : 조건절에 주어진 질의를 먼저 수행하여 그 검색 결고를 조건절의 피연산자로 활용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 이름<span class=\"token punctuation\">,</span> 주소\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> 이름 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> 이름 <span class=\"token keyword\">FROM</span> 여가활동 <span class=\"token keyword\">WHERE</span> 취미 <span class=\"token operator\">=</span> <span class=\"token string\">'코딩'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">SELECT</span> 이름<span class=\"token punctuation\">,</span> 주소\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> 이름 <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> 이름 <span class=\"token keyword\">FROM</span> 여가활동<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">SELECT</span> 이름<span class=\"token punctuation\">,</span> 주소\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> 이름 <span class=\"token keyword\">FROM</span> 여가활동 <span class=\"token keyword\">WHERE</span> 여가활동<span class=\"token punctuation\">.</span>이름 <span class=\"token operator\">=</span> 사원<span class=\"token punctuation\">.</span>이름<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>EXIST : 하위질의로 검색된 결과가 존재하는지 확인할 때 쓴다...</p>\n<p>위 예시의 경우 사원테이블의 이름이 여가활동의 이름에도 있는지 확인하고, 두 테이블에 이름이 존재하는 사원의 이름과 주소를 출력한다.</p>\n</blockquote>\n<h2>SELECT (2)</h2>\n<h2>그룹함수</h2>\n<blockquote>\n<p>GROUP BY 절에 지정된 그룹별로 속성의 값을 집계할 함수를 기술함</p>\n</blockquote>\n<ul>\n<li>COUNT</li>\n<li>SUM</li>\n<li>AVG</li>\n<li>MAX</li>\n<li>MIN</li>\n<li>STDDEV : 표준편차</li>\n<li>VARIANCE : 분산</li>\n<li>ROLLUP</li>\n<li>CUBE</li>\n</ul>\n<h4>📌 예시</h4>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 부서<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>상여금<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> 상여금평균\n<span class=\"token keyword\">FROM</span> 상여금\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> 부서</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">상여금</code>테이블에서 <code class=\"language-text\">부서</code>별 <code class=\"language-text\">상여금</code>평균을 구한다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 부서<span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> 사원수\n<span class=\"token keyword\">FROM</span> 상여금\n<span class=\"token keyword\">WHERE</span> 상여금 <span class=\"token operator\">>=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> 부서\n<span class=\"token keyword\">HAVING</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">2</span></code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">상여금</code>테이블에서 <code class=\"language-text\">상여금</code>이 <code class=\"language-text\">100</code>이상인 사원이 <code class=\"language-text\">2명</code>이상인 <code class=\"language-text\">부서</code>의 튜플 개수를 구한다.</p>\n</blockquote>\n<h2>WINDOW 함수</h2>\n<blockquote>\n<p>GROUP BY절을 이용하지 않고 함수의 인수로 지정한 속성의 값을 집계한다</p>\n<p>WINDOW함수의 범위는 PARTITION BY절에 지정한 속성이 된다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n<span class=\"token punctuation\">[</span>WINDOW함수 <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> 속성 <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 속성<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<ul>\n<li>ROW_NUMBER() : 각 레코드에 대한 일련번호 반환</li>\n<li>RANK() : 공동 순위 반영</li>\n<li>DENSE_RANK() : 공동 순위 무시</li>\n</ul>\n<h4>📌 예시</h4>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 상여내역<span class=\"token punctuation\">,</span> 상여금<span class=\"token punctuation\">,</span> ROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> 상여내역 <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 상여금 <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">NO</span>\n<span class=\"token keyword\">FROM</span> 상여금</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">상여금</code> 테이블에서 <code class=\"language-text\">상여내역</code>별로 <code class=\"language-text\">상여금</code>에 대한 일련번호를 구한다.</p>\n<p>순서는 내림차순이며, 속성명은 NO</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 상여내역<span class=\"token punctuation\">,</span> 상여금<span class=\"token punctuation\">,</span> RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> 상여내역 <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 상여금 <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> 상여금순위\n<span class=\"token keyword\">FROM</span> 상여금</code></pre></div>\n<h3>집합연산자</h3>\n<ul>\n<li>UNION : 합집합</li>\n<li>UNION ALL : 중복허용 합집합</li>\n<li>INTERSECT : 교집합</li>\n<li>EXCEPT : 차집합</li>\n</ul>\n<br/>\n<h4>📌 예시</h4>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 사원\n<span class=\"token keyword\">INTERSECT</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> 직원</code></pre></div>\n<h2>JOIN</h2>\n<blockquote>\n<p>JOIN은 두 개의 릴레이션에서 연관된 튜플들을 결합하여, 하나의 새로운 릴레이션을 반환한다.</p>\n<ul>\n<li>일반적으로 FROM절에 기술한다.</li>\n<li>크게 INNER JOIN과 OUTER JOIN으로 구분된다.</li>\n</ul>\n</blockquote>\n<h3>INNER JOIN</h3>","frontmatter":{"title":"SQL-SELECT","date":"July 23, 2022","update":null,"tags":["SQL"],"series":"SQL"},"fields":{"slug":"/select/","readingTime":{"minutes":4.105}}},"seriesList":{"edges":[{"node":{"id":"496c7f13-7ae3-564c-91cc-9040dae0bbdd","fields":{"slug":"/ddl/"},"frontmatter":{"title":"SQL-DDL"}}},{"node":{"id":"557ba987-9554-50ea-a43f-12d0977a94f2","fields":{"slug":"/dcl/"},"frontmatter":{"title":"SQL-DCL"}}},{"node":{"id":"8c479320-8489-5ee8-a4cb-44d313677267","fields":{"slug":"/dml/"},"frontmatter":{"title":"SQL-DML"}}},{"node":{"id":"af42b98e-18d6-5b90-8c7a-2520779b161b","fields":{"slug":"/select/"},"frontmatter":{"title":"SQL-SELECT"}}}]},"previous":{"fields":{"slug":"/5-poor-avatar/"},"frontmatter":{"title":"멋쟁이사자처럼 X 넥슨 MOD Suppoters Hackathon 7주차 금요일 회고"}},"next":{"fields":{"slug":"/2609/"},"frontmatter":{"title":"백준 2609 최대공약수와 최소공배수"}}},"pageContext":{"id":"af42b98e-18d6-5b90-8c7a-2520779b161b","series":"SQL","previousPostId":"582b19e4-3276-5081-9623-0aad52451378","nextPostId":"16b222b7-0deb-575a-b396-08b9c007ffae"}},"staticQueryHashes":[]}