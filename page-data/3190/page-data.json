{"componentChunkName":"component---src-templates-post-jsx","path":"/3190/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"e7d91947-ea4e-5fe1-8855-ff481422feb9","excerpt":"문제 'Dummy' 라는 도스게임이 있다. 이 게임에는 뱀이 나와서 기어다니는데, 사과를 먹으면 뱀 길이가 늘어난다. 뱀이 이리저리 기어다니다가 벽 또는 자기자신의 몸과 부딪히면 게임이 끝난다.\n\n게임은 NxN 정사각 보드위에서 진행되고, 몇몇 칸에는 사과가 놓여져 있다. 보드의 상하좌우 끝에 벽이 있다. 게임이 시작할때 뱀은 맨위 맨좌측에 위치하고 뱀의…","html":"<h2>문제</h2>\n<p>'Dummy' 라는 도스게임이 있다. 이 게임에는 뱀이 나와서 기어다니는데, 사과를 먹으면 뱀 길이가 늘어난다. 뱀이 이리저리 기어다니다가 벽 또는 자기자신의 몸과 부딪히면 게임이 끝난다.\n<br/>\n게임은 NxN 정사각 보드위에서 진행되고, 몇몇 칸에는 사과가 놓여져 있다. 보드의 상하좌우 끝에 벽이 있다. 게임이 시작할때 뱀은 맨위 맨좌측에 위치하고 뱀의 길이는 1 이다. 뱀은 처음에 오른쪽을 향한다.\n<br/>\n뱀은 매 초마다 이동을 하는데 다음과 같은 규칙을 따른다.\n<br/>\n먼저 뱀은 몸길이를 늘려 머리를 다음칸에 위치시킨다.\n만약 이동한 칸에 사과가 있다면, 그 칸에 있던 사과가 없어지고 꼬리는 움직이지 않는다.\n만약 이동한 칸에 사과가 없다면, 몸길이를 줄여서 꼬리가 위치한 칸을 비워준다. 즉, 몸길이는 변하지 않는다.\n사과의 위치와 뱀의 이동경로가 주어질 때 이 게임이 몇 초에 끝나는지 계산하라.\n<br/></p>\n<h2>풀이</h2>\n<p>deque를 이용해 뱀의 body 좌표 정보를 저장했다.<br/>\n뱀이 바라보는 방향은 0, 1, 2, 3 총 네가지가 있으며 각각 up, right, down, left를 의미한다. <br/>\n초기값을 입력받고 게임을 시작한다.<br/>\n뱀의 방향 변화가 일어나는 시간과 현재 시간을 비교하며 2번째 while문을 돌린다.<br/>\n뱀이 한 방향으로 가는 만큼 while문을 돌렸다면, 회전 방향에 따라 뱀이 바라보는 방향을 변화시키고 다음 time slice만큼 또 while문을 돌린다.<br/>\n가장 바깥의 while문이 break 되었다면,<br/></p>\n<ol>\n<li>뱀이 주어진 방향 변화를 모두 마쳤지만 아직 죽지않았는지(== flag가 0)</li>\n<li>뱀이 map의 바운더리에 부딪혔거나, 몸에 부딪혀 죽었는지(== flag가 1)\n판단하고 1번이라면 뱀이 죽을때까지 cur_time을 카운트한다.<br/>\n<br/><br/>\napple을 먹었다면 apple의 값을 1에서 0으로 바꿔줘야하는 것을 간과해 처음에 실패했었다<br/>\n일어날 경우의 수를 세세하게 짜자!<br/><br/></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"c++\"><pre class=\"language-c++\"><code class=\"language-c++\">int N,K,L;\nint apple[101][101];\nint direction = 1; //0, 1, 2, 3 : up, right, down, left\npair&lt;int, char&gt; rotation[100];\nint rotation_cnt = 0;\ndeque&lt;pair&lt;int, int&gt;&gt; body;\nbool flag = 0;\nint cur_time = 0;\nvoid change_direction(char c) {\n\tif (c == &#39;D&#39;) {\n\t\tif (direction == 3) {\n\t\t\tdirection = 0;\n\t\t}\n\t\telse direction++;\n\t}\n\telse if (c == &#39;L&#39;) {\n\t\tif (direction == 0) {\n\t\t\tdirection = 3;\n\t\t}\n\t\telse direction--;\n\t}\n}\nbool check_flag(int x, int y, int f) {\n\t// map idx out of range\n\tif (f == 1) {\n\t\tif (y &gt; N or y &lt; 1) {\n\t\t\tflag = 1;\n\t\t\treturn 1;\n\t\t}\n\t}\n\tif (f == 0) {\n\t\tif (x &gt; N or x &lt; 1) {\n\t\t\tflag = 1;\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t// body collision\n\tif (find(body.begin(), body.end(), make_pair(x, y)) != body.end()) {\n\t\tflag = 1;\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nint main() {\n\t//init\n\tcin &gt;&gt; N &gt;&gt; K;\n\tint a, b;\n\twhile (K--) {\n\t\tcin &gt;&gt; a &gt;&gt; b;\n\t\tapple[a][b] = 1;\n\t}\n\tcin &gt;&gt; L;\n\tint t;\n\tchar r;\n\tfor (int i = 0; i &lt; L; i++) {\n\t\tcin &gt;&gt; t &gt;&gt; r;\n\t\trotation[i] = make_pair(t, r);\n\t}\n\t// game start\n\tint r_idx = 0;\n\tbody.push_back(make_pair(1,1));\n\n\twhile (!flag) {\n\t\tif (r_idx == L) {\n\t\t\tbreak;\n\t\t}\n\t\twhile (rotation[r_idx].first != cur_time) {\n\t\t\tpair&lt;int, int&gt; head = body.back();\n\t\t\tint x = head.first;\n\t\t\tint y = head.second;\n\n\t\t\t// up\n\t\t\tif (direction == 0) {\n\t\t\t\tx--;\n\t\t\t\tcur_time++;\n\t\t\t\tif (check_flag(x, y, 0)) break;\n\t\t\t\tbody.push_back(make_pair(x, y));\n\t\t\t}\n\t\t\telse if (direction == 1) {\n\t\t\t\ty++;\n\t\t\t\tcur_time++;\n\t\t\t\tif (check_flag(x, y, 1)) break;\n\t\t\t\tbody.push_back(make_pair(x, y));\n\t\t\t}\n\t\t\telse if (direction == 2) {\n\t\t\t\tx++;\n\t\t\t\tcur_time++;\n\t\t\t\tif (check_flag(x, y, 0)) break;\n\t\t\t\tbody.push_back(make_pair(x, y));\n\t\t\t}\n\t\t\telse if (direction == 3) {\n\t\t\t\ty--;\n\t\t\t\tcur_time++;\n\t\t\t\tif (check_flag(x, y, 1)) break;\n\t\t\t\tbody.push_back(make_pair(x, y));\n\t\t\t}\n\t\t\t//check apple\n\t\t\tif (apple[x][y] == 1) {\n\t\t\t\tapple[x][y] = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbody.pop_front();\n\t\t\t}\n\t\t}\n\t\tchange_direction(rotation[r_idx].second);\n\t\tr_idx++;\n\t}\n\n\t// rotation end, but not dead\n\tif (flag == 0) {\n\t\tif (direction == 0) {//up\n\t\t\tpair&lt;int, int&gt; head = body.back();\n\t\t\tint x = head.first;\n\t\t\tint y = head.second;\n\t\t\twhile (x &gt; 0) {\n\t\t\t\tx--;\n\t\t\t\tcur_time++;\n\t\t\t\t// body collision\n\t\t\t\tif (find(body.begin(), body.end(), make_pair(x, y)) != body.end()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// check apple\n\t\t\t\tif (apple[x][y] != 1) {\n\t\t\t\t\tbody.pop_front();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (direction == 1) {//right\n\t\t\tpair&lt;int, int&gt; head = body.back();\n\t\t\tint x = head.first;\n\t\t\tint y = head.second;\n\t\t\twhile (y &lt;= N) {\n\t\t\t\ty++;\n\t\t\t\tcur_time++;\n\t\t\t\t// body collision\n\t\t\t\tif (find(body.begin(), body.end(), make_pair(x, y)) != body.end()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// check apple\n\t\t\t\tif (apple[x][y] != 1) {\n\t\t\t\t\tbody.pop_front();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (direction == 2) {//down\n\t\t\tpair&lt;int, int&gt; head = body.back();\n\t\t\tint x = head.first;\n\t\t\tint y = head.second;\n\t\t\twhile (x &lt;= N) {\n\t\t\t\tx++;\n\t\t\t\tcur_time++;\n\t\t\t\t// body collision\n\t\t\t\tif (find(body.begin(), body.end(), make_pair(x, y)) != body.end()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// check apple\n\t\t\t\tif (apple[x][y] != 1) {\n\t\t\t\t\tbody.pop_front();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (direction == 3) {//left\n\t\t\tpair&lt;int, int&gt; head = body.back();\n\t\t\tint x = head.first;\n\t\t\tint y = head.second;\n\t\t\twhile (y &gt; 0) {\n\t\t\t\ty--;\n\t\t\t\tcur_time++;\n\t\t\t\t// body collision\n\t\t\t\tif (find(body.begin(), body.end(), make_pair(x, y)) != body.end()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// check apple\n\t\t\t\tif (apple[x][y] != 1) {\n\t\t\t\t\tbody.pop_front();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout &lt;&lt; cur_time;\n}</code></pre></div>","frontmatter":{"title":"백준 11655 ROT13","date":"July 11, 2022","update":null,"tags":["C++","cote"],"series":"코테준비"},"fields":{"slug":"/3190/","readingTime":{"minutes":5.795}}},"seriesList":{"edges":[{"node":{"id":"5fb7321d-4318-5f05-bf3d-77f7148489ff","fields":{"slug":"/char-to-int/"},"frontmatter":{"title":"문자형을 숫자로 변환"}}},{"node":{"id":"d248f438-ea5e-5dce-9eca-91d7ed7b588d","fields":{"slug":"/tuple/"},"frontmatter":{"title":"c++로 tuple 만들기"}}},{"node":{"id":"bd3e736f-1515-5e7f-8ebc-877648a92332","fields":{"slug":"/vector/"},"frontmatter":{"title":"c++로 vector 만들기"}}},{"node":{"id":"6d456c11-c5ff-5c88-bf67-53f809fa8f4e","fields":{"slug":"/10808/"},"frontmatter":{"title":"백준 10808 알파벳 개수"}}},{"node":{"id":"93a0f4fd-df3e-5042-96fc-8d6a5c6a7a56","fields":{"slug":"/10988/"},"frontmatter":{"title":"백준 10988 팰린드롬인지 확인하기"}}},{"node":{"id":"caa403f0-8394-5573-91e0-598c3d830ce5","fields":{"slug":"/1159/"},"frontmatter":{"title":"백준 1159 농구경기"}}},{"node":{"id":"d5c20b7a-96fb-5d13-b67b-fa31065fb2d9","fields":{"slug":"/11655/"},"frontmatter":{"title":"백준 11655 ROT13"}}},{"node":{"id":"28fa3299-e15d-55c2-a832-fe0a77d2317d","fields":{"slug":"/2309/"},"frontmatter":{"title":"백준 2309 일곱 난쟁이"}}},{"node":{"id":"ac17cf7d-3c7d-5f76-abb1-5ade93338515","fields":{"slug":"/2979/"},"frontmatter":{"title":"백준 2979 트럭주차"}}},{"node":{"id":"df59f32b-ae2e-58f3-847f-750d58338546","fields":{"slug":"/arr-init/"},"frontmatter":{"title":"fill과 memset을 이용해 배열 초기화"}}},{"node":{"id":"dce88f3f-a040-5fde-8a7e-ec16ec97f176","fields":{"slug":"/9996/"},"frontmatter":{"title":"백준 9996 한국이 그리울 땐 서버에 접속하지"}}},{"node":{"id":"5f9c98e9-026b-5f88-804b-eb987be90b43","fields":{"slug":"/pg-49189/"},"frontmatter":{"title":"프로그래머스 49189 가장 먼 노드"}}},{"node":{"id":"0034abcb-f08d-531a-ac34-be7324a75fed","fields":{"slug":"/1620/"},"frontmatter":{"title":"백준 1620 나는야 포켓몬 마스터 이다솜"}}},{"node":{"id":"97459c2b-0290-5bad-a0c8-9ea2c9e265ac","fields":{"slug":"/2559/"},"frontmatter":{"title":"백준 2559 수열"}}},{"node":{"id":"b7f0abb5-54fa-5e9e-93f5-5dc50f4193b4","fields":{"slug":"/9375/"},"frontmatter":{"title":"백준 9375 패션왕 신해빈"}}},{"node":{"id":"bce5862a-0de1-543f-9fd1-454b779dbb96","fields":{"slug":"/1213/"},"frontmatter":{"title":"백준 1213 팰린드롬 만들기"}}},{"node":{"id":"499ddfb7-10da-50c3-ab0a-b1aec0df9c24","fields":{"slug":"/1940/"},"frontmatter":{"title":"백준 1940 주몽"}}},{"node":{"id":"7d4a62e8-a18b-50b1-843b-9b4c354d3d90","fields":{"slug":"/10828/"},"frontmatter":{"title":"백준 10828 스택"}}},{"node":{"id":"e0c61cb6-14f1-561f-ac95-449043bd0847","fields":{"slug":"/10845/"},"frontmatter":{"title":"백준 10845 큐"}}},{"node":{"id":"7435b4be-3372-5d45-82d8-bd3483e4c7a4","fields":{"slug":"/10866/"},"frontmatter":{"title":"백준 10866 덱"}}},{"node":{"id":"0d7269bc-840b-5a2a-a683-b40f3f67b428","fields":{"slug":"/1260/"},"frontmatter":{"title":"백준 1260 DFS와 BFS"}}},{"node":{"id":"e7d91947-ea4e-5fe1-8855-ff481422feb9","fields":{"slug":"/3190/"},"frontmatter":{"title":"백준 11655 ROT13"}}},{"node":{"id":"d761be9f-ef07-5809-88e0-651087cde79f","fields":{"slug":"/1629/"},"frontmatter":{"title":"백준 1629 곱셈"}}},{"node":{"id":"9e40a072-57e3-59bc-a6f3-56753b2ac35b","fields":{"slug":"/3986/"},"frontmatter":{"title":"백준 3986 좋은단어"}}},{"node":{"id":"3a242fde-42f2-5912-a459-3af4ce16fa30","fields":{"slug":"/2839/"},"frontmatter":{"title":"백준 2839 설탕배달"}}},{"node":{"id":"9c86a659-42a3-5436-9244-4d873c0e56ce","fields":{"slug":"/2869/"},"frontmatter":{"title":"백준 2869 달팽이는 올라가고 싶다"}}},{"node":{"id":"548b96d2-4139-5815-9ced-b88b1a1d9531","fields":{"slug":"/4375/"},"frontmatter":{"title":"백준 4375 1"}}},{"node":{"id":"ea817854-25f5-5422-968f-ddd26bd8b3fd","fields":{"slug":"/18111/"},"frontmatter":{"title":"백준 18111 마인크래프트"}}},{"node":{"id":"6db82c9d-cfb6-534c-842d-aa9baa60a4ac","fields":{"slug":"/1018/"},"frontmatter":{"title":"백준 1018 체스판 다시 칠하기"}}},{"node":{"id":"f34e8c33-0074-5aa9-a873-3aea20797ea0","fields":{"slug":"/7568/"},"frontmatter":{"title":"백준 7568 덩치"}}},{"node":{"id":"1e6f6524-eb8e-5f75-843f-0e3eb90cedc4","fields":{"slug":"/2798/"},"frontmatter":{"title":"백준 2798 블랙잭"}}},{"node":{"id":"2b9edea1-9e5a-505e-9fab-117a15c331c6","fields":{"slug":"/1181/"},"frontmatter":{"title":"백준 1181 단어 정렬"}}}]},"previous":{"fields":{"slug":"/1-ot/"},"frontmatter":{"title":"Spring 오리엔테이션"}},"next":{"fields":{"slug":"/2-practice/"},"frontmatter":{"title":"Spring 간단 실습"}}},"pageContext":{"id":"e7d91947-ea4e-5fe1-8855-ff481422feb9","series":"코테준비","previousPostId":"3a0b0bf0-fd48-5c4c-aa3d-6f68baac5ce0","nextPostId":"289d0880-983d-530c-a78e-725716fa603d"}},"staticQueryHashes":[]}