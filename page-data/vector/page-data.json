{"componentChunkName":"component---src-templates-post-jsx","path":"/vector/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"bd3e736f-1515-5e7f-8ebc-877648a92332","excerpt":"vector? 동적으로 요소를 할당할 수 있다. 동적할당이란? 실행 시간 동안 사용할 메모리 공간을 할당하는 것을 의미한다. 쉽게 말해서 정적 배열인 array의 경우 미리 얼만큼 사용할 것인지 크기를 결정하고 사용한다. 그러나 동적으로 할당한다면 상황에 따라 원하는 크기만큼의 메모리가 할당되고 이미 할당된 메모리라도 언제든지 크기 조정이 가능하다. 즉,…","html":"<h2>vector?</h2>\n<p>동적으로 요소를 할당할 수 있다.</p>\n<blockquote>\n<p>동적할당이란?</p>\n<p>실행 시간 동안 사용할 메모리 공간을 할당하는 것을 의미한다.</p>\n<p>쉽게 말해서 정적 배열인 array의 경우 미리 얼만큼 사용할 것인지 크기를 결정하고 사용한다.</p>\n<p>그러나 동적으로 할당한다면 상황에 따라 원하는 크기만큼의 메모리가 할당되고 이미 할당된 메모리라도 언제든지 크기 조정이 가능하다.</p>\n<p><strong>즉, 어떤 배열이 필요한데 그 배열의 크기를 정확히 알 수 없을 때 사용할 수 있다.</strong></p>\n<p>그렇다면 동적 할당이 정적 할당보다 더 좋은게 아닌가?</p>\n<ul>\n<li>꼭 그렇다고 할 수 만은 없다!</li>\n<li>동적할당은 메모리 누수가 일어날 수 있기 때문에 사용하지 않을 땐 메모리를 해제해줘야한다.</li>\n</ul>\n</blockquote>\n<h2>vector 인터페이스</h2>\n<table>\n<thead>\n<tr>\n<th>기능</th>\n<th>형식</th>\n<th>예시</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>생성</td>\n<td>vector&#x3C;자료형> name</td>\n<td>vector<int> v</td>\n</tr>\n<tr>\n<td>n만큼 할당 후 0으로 초기화</td>\n<td>vector&#x3C;자료형> name(n)</td>\n<td>vector<int> v(5)</td>\n</tr>\n<tr>\n<td>값 미리 초기화</td>\n<td>vector&#x3C;자료형> name = {}</td>\n<td>vector<int> v = {1, 2, 3}</td>\n</tr>\n<tr>\n<td>벡터 시작점 주소값</td>\n<td>v.begin()</td>\n<td></td>\n</tr>\n<tr>\n<td>벡터 끝부분+1 주소값</td>\n<td>v.end()</td>\n<td></td>\n</tr>\n<tr>\n<td>i번째 요소 접근</td>\n<td>v.at(i)</td>\n<td>v.at(0)</td>\n</tr>\n<tr>\n<td>첫 번째 요소 접근</td>\n<td>v.front()</td>\n<td></td>\n</tr>\n<tr>\n<td>마지막 요소 접근</td>\n<td>v.back()</td>\n<td></td>\n</tr>\n<tr>\n<td>맨 뒤에 요소 추가</td>\n<td>v.push_back(값)</td>\n<td>v.push_back(2)</td>\n</tr>\n<tr>\n<td>맨 뒤에 요소 제거</td>\n<td>v.pop_back()</td>\n<td></td>\n</tr>\n<tr>\n<td>요소 삽입</td>\n<td>v.insert(위치, 값)</td>\n<td>v.insert(v.begin()+1, 100)</td>\n</tr>\n<tr>\n<td>요소 삭제</td>\n<td>v.erase(시작위치, 끝위치)</td>\n<td>v.erase(v.begin), v.erase(v.begin, v.begin+5)</td>\n</tr>\n<tr>\n<td>모든 요소 삭제</td>\n<td>v.clear()</td>\n<td></td>\n</tr>\n<tr>\n<td>벡터 사이즈 조정</td>\n<td>v.resize(사이즈)</td>\n<td>v.resize(10) : 사이즈가 커지면 0으로 값이 추가된다</td>\n</tr>\n<tr>\n<td>벡터 swap</td>\n<td>v.swap(벡터)</td>\n<td>v1.swap(v2)</td>\n</tr>\n<tr>\n<td>벡터가 비었는지 확인</td>\n<td>v.empty()</td>\n<td></td>\n</tr>\n<tr>\n<td>벡터 사이즈 반환</td>\n<td>v.size()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>vector 사용 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"c++\"><pre class=\"language-c++\"><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n// vector선언 : 꺽쇠안에 자료형을 명시\nvector&lt;int&gt; v;\nint main(){\n    // vector 값 할당 - push_back\n    // : vector의 맨 뒤에 요소를 추가한다.\n    v.push_back(0);\n    v.push_back(1);\n    for(int i = 1; i &lt;= 10; i++)v.push_back(i);\n    \n    // vector 값 삭제1 - pop_back\n    // : vector의 맨 뒤에 값을 삭제한다.\n    v.pop_back();\n    \n    // vector 값 삭제2 - erase\n    v.erase(v.begin(), v.begin()+2);\n    \n    // vector 값 출력\n    for (int a:v) cout &lt;&lt; a &lt;&lt; &quot; &quot;;\n    cout &lt;&lt; &quot;\\n&quot;;\n    \n    // vector 값 탐색 - find\n    auto a = find(v.begin(), v.end(), 100);\n    if (a == v.end()) cout &lt;&lt; &quot;100을 찾을 수 없음.&quot; &lt;&lt; &quot;\\n&quot;;\n    \n    // vector 값 채우기 - fill\n    fill(v.begin(), v.end(), 10);\n}</code></pre></div>","frontmatter":{"title":"c++로 vector 만들기","date":"June 24, 2022","update":null,"tags":["C++","cote"],"series":"코테준비"},"fields":{"slug":"/vector/","readingTime":{"minutes":3.19}}},"seriesList":{"edges":[{"node":{"id":"5fb7321d-4318-5f05-bf3d-77f7148489ff","fields":{"slug":"/char-to-int/"},"frontmatter":{"title":"문자형을 숫자로 변환"}}},{"node":{"id":"d248f438-ea5e-5dce-9eca-91d7ed7b588d","fields":{"slug":"/tuple/"},"frontmatter":{"title":"c++로 tuple 만들기"}}},{"node":{"id":"bd3e736f-1515-5e7f-8ebc-877648a92332","fields":{"slug":"/vector/"},"frontmatter":{"title":"c++로 vector 만들기"}}},{"node":{"id":"6d456c11-c5ff-5c88-bf67-53f809fa8f4e","fields":{"slug":"/10808/"},"frontmatter":{"title":"백준 10808 알파벳 개수"}}},{"node":{"id":"93a0f4fd-df3e-5042-96fc-8d6a5c6a7a56","fields":{"slug":"/10988/"},"frontmatter":{"title":"백준 10988 팰린드롬인지 확인하기"}}},{"node":{"id":"caa403f0-8394-5573-91e0-598c3d830ce5","fields":{"slug":"/1159/"},"frontmatter":{"title":"백준 1159 농구경기"}}},{"node":{"id":"d5c20b7a-96fb-5d13-b67b-fa31065fb2d9","fields":{"slug":"/11655/"},"frontmatter":{"title":"백준 11655 ROT13"}}},{"node":{"id":"28fa3299-e15d-55c2-a832-fe0a77d2317d","fields":{"slug":"/2309/"},"frontmatter":{"title":"백준 2309 일곱 난쟁이"}}},{"node":{"id":"ac17cf7d-3c7d-5f76-abb1-5ade93338515","fields":{"slug":"/2979/"},"frontmatter":{"title":"백준 2979 트럭주차"}}},{"node":{"id":"df59f32b-ae2e-58f3-847f-750d58338546","fields":{"slug":"/arr-init/"},"frontmatter":{"title":"fill과 memset을 이용해 배열 초기화"}}},{"node":{"id":"dce88f3f-a040-5fde-8a7e-ec16ec97f176","fields":{"slug":"/9996/"},"frontmatter":{"title":"백준 9996 한국이 그리울 땐 서버에 접속하지"}}},{"node":{"id":"5f9c98e9-026b-5f88-804b-eb987be90b43","fields":{"slug":"/pg-49189/"},"frontmatter":{"title":"프로그래머스 49189 가장 먼 노드"}}},{"node":{"id":"0034abcb-f08d-531a-ac34-be7324a75fed","fields":{"slug":"/1620/"},"frontmatter":{"title":"백준 1620 나는야 포켓몬 마스터 이다솜"}}},{"node":{"id":"97459c2b-0290-5bad-a0c8-9ea2c9e265ac","fields":{"slug":"/2559/"},"frontmatter":{"title":"백준 2559 수열"}}},{"node":{"id":"b7f0abb5-54fa-5e9e-93f5-5dc50f4193b4","fields":{"slug":"/9375/"},"frontmatter":{"title":"백준 9375 패션왕 신해빈"}}},{"node":{"id":"bce5862a-0de1-543f-9fd1-454b779dbb96","fields":{"slug":"/1213/"},"frontmatter":{"title":"백준 1213 팰린드롬 만들기"}}},{"node":{"id":"499ddfb7-10da-50c3-ab0a-b1aec0df9c24","fields":{"slug":"/1940/"},"frontmatter":{"title":"백준 1940 주몽"}}},{"node":{"id":"7d4a62e8-a18b-50b1-843b-9b4c354d3d90","fields":{"slug":"/10828/"},"frontmatter":{"title":"백준 10828 스택"}}},{"node":{"id":"e0c61cb6-14f1-561f-ac95-449043bd0847","fields":{"slug":"/10845/"},"frontmatter":{"title":"백준 10845 큐"}}},{"node":{"id":"7435b4be-3372-5d45-82d8-bd3483e4c7a4","fields":{"slug":"/10866/"},"frontmatter":{"title":"백준 10866 덱"}}},{"node":{"id":"0d7269bc-840b-5a2a-a683-b40f3f67b428","fields":{"slug":"/1260/"},"frontmatter":{"title":"백준 1260 DFS와 BFS"}}},{"node":{"id":"e7d91947-ea4e-5fe1-8855-ff481422feb9","fields":{"slug":"/3190/"},"frontmatter":{"title":"백준 11655 ROT13"}}},{"node":{"id":"d761be9f-ef07-5809-88e0-651087cde79f","fields":{"slug":"/1629/"},"frontmatter":{"title":"백준 1629 곱셈"}}},{"node":{"id":"9e40a072-57e3-59bc-a6f3-56753b2ac35b","fields":{"slug":"/3986/"},"frontmatter":{"title":"백준 3986 좋은단어"}}},{"node":{"id":"3a242fde-42f2-5912-a459-3af4ce16fa30","fields":{"slug":"/2839/"},"frontmatter":{"title":"백준 2839 설탕배달"}}},{"node":{"id":"9c86a659-42a3-5436-9244-4d873c0e56ce","fields":{"slug":"/2869/"},"frontmatter":{"title":"백준 2869 달팽이는 올라가고 싶다"}}},{"node":{"id":"548b96d2-4139-5815-9ced-b88b1a1d9531","fields":{"slug":"/4375/"},"frontmatter":{"title":"백준 4375 1"}}},{"node":{"id":"ea817854-25f5-5422-968f-ddd26bd8b3fd","fields":{"slug":"/18111/"},"frontmatter":{"title":"백준 18111 마인크래프트"}}},{"node":{"id":"6db82c9d-cfb6-534c-842d-aa9baa60a4ac","fields":{"slug":"/1018/"},"frontmatter":{"title":"백준 1018 체스판 다시 칠하기"}}},{"node":{"id":"f34e8c33-0074-5aa9-a873-3aea20797ea0","fields":{"slug":"/7568/"},"frontmatter":{"title":"백준 7568 덩치"}}},{"node":{"id":"1e6f6524-eb8e-5f75-843f-0e3eb90cedc4","fields":{"slug":"/2798/"},"frontmatter":{"title":"백준 2798 블랙잭"}}},{"node":{"id":"2b9edea1-9e5a-505e-9fab-117a15c331c6","fields":{"slug":"/1181/"},"frontmatter":{"title":"백준 1181 단어 정렬"}}},{"node":{"id":"7051c511-32c3-5c98-8946-2330e0ad90a6","fields":{"slug":"/1978/"},"frontmatter":{"title":"백준 1978 소수 찾기"}}},{"node":{"id":"16b222b7-0deb-575a-b396-08b9c007ffae","fields":{"slug":"/2609/"},"frontmatter":{"title":"백준 2609 최대공약수와 최소공배수"}}}]},"previous":{"fields":{"slug":"/kr-str/"},"frontmatter":{"title":"[c++] 한글을 한 글자씩 출력하기"}},"next":{"fields":{"slug":"/10808/"},"frontmatter":{"title":"백준 10808 알파벳 개수"}}},"pageContext":{"id":"bd3e736f-1515-5e7f-8ebc-877648a92332","series":"코테준비","previousPostId":"b2e15c0a-3e85-5d09-bb9a-930a3af8456a","nextPostId":"6d456c11-c5ff-5c88-bf67-53f809fa8f4e"}},"staticQueryHashes":[]}