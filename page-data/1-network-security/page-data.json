{"componentChunkName":"component---src-templates-post-jsx","path":"/1-network-security/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"723a031e-e408-592d-875a-0ebc19f93a34","excerpt":"패킷(Packet) 네트워크에서 데이터를 주고받는 단위 네트워크 3계층에서 정의되는 데이터 단위 그 외에도 OSI의 각 계층에서 주고 받는 정보의 단위를 모두 패킷이라고 총칭하기도함 인터넷(Internet)에서는 IP 데이타그램을 패킷이라고 말함 헤더와 데이터로 구성됨 헤더 : 운송장, 데이터 : 물품 Packet Sniffing src가 dst에게 보내…","html":"<h2>패킷(Packet)</h2>\n<p>네트워크에서 데이터를 주고받는 단위</p>\n<ul>\n<li>네트워크 3계층에서 정의되는 데이터 단위</li>\n<li>그 외에도 OSI의 각 계층에서 주고 받는 정보의 단위를 모두 패킷이라고 총칭하기도함</li>\n<li>인터넷(Internet)에서는 IP 데이타그램을 패킷이라고 말함</li>\n<li>헤더와 데이터로 구성됨</li>\n<li>헤더 : 운송장, 데이터 : 물품</li>\n</ul>\n<h2>Packet Sniffing</h2>\n<blockquote>\n<p>src가 dst에게 보내는 패킷을 중간에 훔쳐봄</p>\n</blockquote>\n<ul>\n<li>\n<p>네트워크 트래픽을 도청하고 민감한 정보를 수집함</p>\n<ul>\n<li>노출된 ID, password, cookie등을 엿볼 수 있음</li>\n<li>HTTP Cookie : 평문 형태의 정보 (session hijacking) (평문이 아니라 암호문이라면 패킷이 노출되어도 정보 노출 위험을 최소화시킬 수 있긴함)</li>\n</ul>\n</li>\n<li>다운로드 불가능한 파일을 덤프하거나 엿볼 수 있는 위험</li>\n<li>Passive attack</li>\n</ul>\n<h3>스니핑이 가능한 조건</h3>\n<ul>\n<li>\n<p>스위치/라우터로 분리된 네트워크들 간에는 스니핑 불가</p>\n<ul>\n<li>허브로는 가능 (브로드캐스트)</li>\n</ul>\n</li>\n<li>\n<p>묶여진 내부 네트워크에서만 스니핑 가능</p>\n<ul>\n<li>예시 사진 1번에서는 가상 네트워크 구역내에서만 스니핑 가능</li>\n<li>예시 사진 2번에서 A공유기 구역의 pc가 B공유기 구역에 스니핑 불가능</li>\n</ul>\n</li>\n</ul>\n<h2>Wireshark</h2>\n<p>패킷 분석 프로그램</p>\n<h3>Promiscuous mode란?</h3>\n<blockquote>\n<p>네트워크 패킷 필터링을 하지않는다</p>\n</blockquote>\n<p>정상적인 경우, 네트워크 패킷들을 하드웨어적으로 필터링함</p>\n<ul>\n<li>네트워크 카드에 인식된 2계층(MAC)과 3계층(IP) 정보가 자신의 것과 일치하지않는 패킷은 무시한다</li>\n<li>무시하지않고 모든 패킷을 일일이 CPU가 확인하여 처리하면 CPU에 부하가 많아짐</li>\n</ul>\n<p>Promiscuous mode를 하면 패킷을 필터링하지않는다</p>\n<p>ex) 와이파이 패킷을 promiscuous mode로 해두면 컴퓨터에서 패킷을 확인했는데 핸드폰의 패킷도 관찰 가능 </p>\n<blockquote>\n<p>Promiscuous 모드로 모든 패킷을 확인하므로 나에게 필요한 패킷을 필터링하는게 중요하다</p>\n</blockquote>\n<h3>Capture filter</h3>\n<blockquote>\n<p>캡처를 시작하기전에 필터를 적용하는 방식</p>\n<p>불필요한 패킷을 사전에 필터링해서 Wireshark 프로그램에 걸리는 부하를 줄일 수 있다</p>\n</blockquote>\n<ul>\n<li>필터없이 캡처를 시작할 경우 많은 양의 패킷으로 인해 원하는 패킷을 찾기 힘듦</li>\n<li>캡처를 시작한 이후 Display Filter를 적용할 수 있으나 Display Filter는 모든 패킷을 캡처한 후 필터링을 진행하는 것이기 때문에 불필요한 패킷이 캡처되어서 파일의 크기가 커진다</li>\n</ul>\n<p>ex)</p>\n<ul>\n<li>host 10.10.50.170 : 특정 호스트만 캡처</li>\n<li>port 80 : 80번 포트만 캡처</li>\n<li>host 10.10.50.170 and port 80 : &#x26;&#x26;와 ==, || 연산자 사용 가능</li>\n</ul>\n<h3>Display Filter</h3>\n<blockquote>\n<p>캡처를 한 뒤 원하는 패킷만 화면에 출력</p>\n</blockquote>\n<ul>\n<li>Capture filter와 문법이 다름</li>\n</ul>\n<p>ex)</p>\n<ul>\n<li>ip.addr = 10.10.50.170</li>\n<li>host 10.10.50.170 and host 10.10.50.15</li>\n<li>tcp.port = 80</li>\n</ul>\n<h3>예제2 : FTP Packets</h3>\n<h4>FTP (File Transfer Protocol)</h4>\n<ul>\n<li>파일 전송 프로토콜</li>\n<li>FTP는 통신을 위해 2개의 port를 사용함 (command, data transfer)</li>\n<li>보통, command용으로 20번 포트, data-transfer 용도로 21번 포트를 사용한다</li>\n<li>평문 파일 전송 프로토콜이라 해킹이 쉬움</li>\n</ul>\n<h2>MAC Address</h2>\n<ul>\n<li>NIC(네트워크 인터페이스 카드)에 할당된 고유한 식별자</li>\n<li>로컬 네트워크 통신에 사용</li>\n<li>48-bit의 주소길이</li>\n<li>\n<p>관리자 계정은 PC의 MAC주소를 직접 변경할 수도 있음</p>\n<ul>\n<li>LAN카드내에 박혀있는 하드웨이 맥주소를 바뀔 수 없지만 PC에 로드되어있는 맥주소는 변경이 가능하다</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>cmd에 ifconfig 명령어로 맥주소 확인 가능(리눅스, 맥)</p>\n<p>윈도우는 ipconfig/all </p>\n</blockquote>\n<h2>LAN과 WAN (Network layer)</h2>\n<ul>\n<li>Datalink layer 통신을 위해서는 MAC  주소를 알아야함</li>\n<li>로컬 네트워크 (LAN) : 서버의 NIC와 내 컴퓨터의 NIC끼리 통신</li>\n<li>외부 네트워크와 연결 (WAN) : 다른 LAN과 연결됨 (라우팅)  ex. 인터넷</li>\n</ul>\n<h2>ARP 메커니즘</h2>\n<blockquote>\n<p>ARP(Address Resolution Protocol) </p>\n<ul>\n<li>맥주소를 알기위한 프로토콜</li>\n</ul>\n</blockquote>\n<h4>ARP를 활용하여 목적지의 MAC주소 찾는 방법</h4>\n<ul>\n<li>\n<p>Broadcast Request </p>\n<ul>\n<li>ip 주소를 가지고 브로드캐스트함</li>\n<li>이 ip주소 가지고 있는애 누구야!</li>\n</ul>\n</li>\n<li>\n<p>Unicat Reply (1대1)</p>\n<ul>\n<li>해당 ip주소를 가지고 있는 애가 자신의 mac주소를 답변해줌</li>\n</ul>\n</li>\n</ul>\n<h4>ARP 취약점</h4>\n<p>답변을 해준 시스템이 정상적인 노드인지 보장 못함 (인증없음)</p>\n<p>원하는 맥주소를 가지고있는 애가 아님에도 속이고 reply 보낼수도있음 - ARP Request</p>\n<h4>MAC주소를 이미 알고있음에도 ARP요청을 보내는 경우</h4>\n<ul>\n<li>브로드 캐스트가 아니라 유니캐스트로 보냄</li>\n<li>MAC주소가 바뀔수도있기때문</li>\n<li>똑같은 ip를 쓰지만 컴퓨터가 바뀔수도있음</li>\n<li>30초정도마다 ARP요청을 다시 보냄</li>\n<li>보냈는데 응답이 없으면 다시 브로드캐스트</li>\n</ul>\n<h3>ARP cache</h3>\n<blockquote>\n<p>ARP cache table</p>\n<ul>\n<li>MAC 주소와 IP주소를 매핑하고 있는 테이블</li>\n</ul>\n</blockquote>\n<ol>\n<li>\n<p>static ARP cahce entry</p>\n<ul>\n<li>수동으로 추가 가능 (컴퓨터 재시작시 삭제)</li>\n</ul>\n</li>\n<li>\n<p>dynamic ARP cache entry</p>\n<ul>\n<li>ARP reply packet을 받으면 OS에 의해 자동으로 저장</li>\n<li>30초간 지속</li>\n</ul>\n</li>\n</ol>\n<h2>ARP Spoofing</h2>\n<p>spoofing : 위장</p>\n<blockquote>\n<p>근거리 통신망(LAN)하에서 ARP 메시지를 이용하여 상대방의 데이터 패킷을 중간에서 가로채는 중간자 공격 </p>\n</blockquote>\n<ul>\n<li>가로챈 패킷을 변조하는 Active attack도 가능</li>\n<li>데이터 링크(Layer 2)상의 프로토콜인 ARP프로토콜을 이용하기 때문에 근거리 상의 통신에서만 사용할 수 있는 공격</li>\n</ul>\n<h3>스위치로 묶인 네트워크에서 스니핑 시도</h3>\n<blockquote>\n<p>허브는 패킷을 브로드 캐스트로 모두에게 보내기때문에 Promiscuous 모드를 키면 패킷을 받아볼 수 있지만 스위치는 MAC주소 테이블을 사용해서 해당 pc에게만 패킷을 보내기때문에 Promiscuous mode를 해도 패킷을 훔쳐볼 수 없다.</p>\n</blockquote>\n<h4>스니핑을 위해 스푸핑 시도!</h4>\n<blockquote>\n<p>스니핑 : 도청</p>\n<p>스푸핑 : 패킷이 나를 거치게 함</p>\n</blockquote>\n<ol>\n<li>공격 대상에게 조작된 정보를 보내 수신지 변경 - 스위치의 맥주소테이블을 감염시킴</li>\n<li>공격자의 NIC는 promiscuous 모드로</li>\n<li>수신된 패킷은 relay함 (Packet forwarding) : 잘못된걸 눈치채지못하게 원래 받아야 할 애한테 다시 보내줌</li>\n<li>패킷 모니터링 툴 실행</li>\n</ol>\n<h2>ARP spoofing 탐지 방법</h2>\n<p>결국은 스위치가 잘해줘야함</p>\n<ul>\n<li>\n<p>ARP 탐지 솔루션 또는 네트워크 방화벽</p>\n<ul>\n<li>arpwatch(*nix 계열)</li>\n<li>xarp(NT/*nix)</li>\n<li>ai 기반 탐지?</li>\n</ul>\n</li>\n<li>Promiscuous 모드로 동작하는 host탐지</li>\n<li>ARP cache 테이블을 정적으로 유지</li>\n</ul>\n<h2>DNS spoofing</h2>\n<blockquote>\n<p>DNS Server가 올바른 Reply를 해주기전에 공격자가 Reply를 해줘서 웹을 연결시킴</p>\n<p>이후 들어오는 DNS Server의 Reply는 무시됨</p>\n</blockquote>","frontmatter":{"title":"9-1 ","date":"April 30, 2022","update":null,"tags":["computer protection"],"series":"컴퓨터 보안"},"fields":{"slug":"/1-network-security/","readingTime":{"minutes":9.29}}},"seriesList":{"edges":[{"node":{"id":"e4acbdfb-722b-57a9-80ae-d895e0db1293","fields":{"slug":"/access-control/"},"frontmatter":{"title":"1-2 Access Control"}}},{"node":{"id":"4a6f8d90-3618-56c6-8559-879e5ecc9bf4","fields":{"slug":"/number-theory/"},"frontmatter":{"title":"2-2 Number Theory"}}},{"node":{"id":"0bd2f3a2-2ebf-58a4-b9b1-3362f3eb162d","fields":{"slug":"/osi-structure/"},"frontmatter":{"title":"1-1 OSI 보안 구조"}}},{"node":{"id":"c09c6352-565d-5712-bd74-a03fc2d175a7","fields":{"slug":"/cia-aa/"},"frontmatter":{"title":"1-1 컴퓨터 보안의 요구 조건 (CIA + AA)"}}},{"node":{"id":"7e8ccf0c-4d31-5ed5-834d-372268de637e","fields":{"slug":"/aes-process/"},"frontmatter":{"title":"5-2 AES Process"}}},{"node":{"id":"c18d6769-2773-5438-80d8-71766e893de4","fields":{"slug":"/cp-danger/"},"frontmatter":{"title":"4-1 다양한 보안 위협"}}},{"node":{"id":"31a7ca0e-a91b-5b21-90ba-72df9a459e48","fields":{"slug":"/multi-enc/"},"frontmatter":{"title":"6-2 Modes of Operation"}}},{"node":{"id":"dc9ea5bb-374d-534c-a413-adc23222b506","fields":{"slug":"/symmetric-cipher/"},"frontmatter":{"title":"3-2 Symmetric Cipher Model (고전 암호)"}}},{"node":{"id":"9a54b7cc-4a15-5b76-8fac-388d5b9e7d11","fields":{"slug":"/pseudo-random/"},"frontmatter":{"title":"7-2 난수 생성"}}},{"node":{"id":"81096a32-03d0-5672-bd39-ceaaefef6160","fields":{"slug":"/web-hack/"},"frontmatter":{"title":"5-1 Web Hacking Overview"}}},{"node":{"id":"33246c96-e01f-5f26-9fe0-935c2ea6d6c8","fields":{"slug":"/finite-field/"},"frontmatter":{"title":"4-2 finite field (Galois Field)"}}},{"node":{"id":"44143c20-8cd6-52c5-a65b-38ae0c254d40","fields":{"slug":"/steam-block/"},"frontmatter":{"title":"4-2 Stream Cipher와 Block Cipher"}}},{"node":{"id":"1cb1eed8-1228-5d4b-8147-ba3cbfbb1ac9","fields":{"slug":"/dos-attack/"},"frontmatter":{"title":"7-1 DoS attack"}}},{"node":{"id":"8ef6b148-c9b0-5e0f-8262-9d5c903ff8da","fields":{"slug":"/arp-attack/"},"frontmatter":{"title":"9-1"}}},{"node":{"id":"723a031e-e408-592d-875a-0ebc19f93a34","fields":{"slug":"/1-network-security/"},"frontmatter":{"title":"9-1 "}}},{"node":{"id":"540db76b-63f4-546a-bab2-98f6dc615676","fields":{"slug":"/public-key/"},"frontmatter":{"title":"9-2"}}},{"node":{"id":"e9c57be2-d977-5fbc-adab-f5d561e162d2","fields":{"slug":"/rsa-mod/"},"frontmatter":{"title":"10-1"}}},{"node":{"id":"8a943633-5d6b-5251-89a3-2c7806793dc4","fields":{"slug":"/rsa-mod/"},"frontmatter":{"title":"10-1"}}},{"node":{"id":"50d433cf-eb0f-543e-a2ab-b910ab2da972","fields":{"slug":"/other-public-key/"},"frontmatter":{"title":"10-2"}}},{"node":{"id":"4b4d9c37-4c09-5364-a635-b279835081b6","fields":{"slug":"/2-hash-func/"},"frontmatter":{"title":"11-2"}}},{"node":{"id":"e5769a05-01a2-595d-8e10-8ff79bd8dc19","fields":{"slug":"/1/"},"frontmatter":{"title":"11-1"}}},{"node":{"id":"e89c1c7f-6f2e-5033-b1d9-790b11ad95d2","fields":{"slug":"/1/"},"frontmatter":{"title":"12-1"}}},{"node":{"id":"54f259cd-800a-566f-9aba-1375697c0710","fields":{"slug":"/2/"},"frontmatter":{"title":"12-2"}}},{"node":{"id":"c66fa2c3-ac99-52b6-9542-acf2ef40f48d","fields":{"slug":"/2/"},"frontmatter":{"title":"13-2"}}},{"node":{"id":"5d789f23-5ef9-5d59-82c9-f7f6fbc87ddc","fields":{"slug":"/1/"},"frontmatter":{"title":"13-1"}}},{"node":{"id":"94edf4db-f16b-5415-bac7-a0631d61876c","fields":{"slug":"/2/"},"frontmatter":{"title":"14-2"}}},{"node":{"id":"6801285e-c42f-5541-b35b-192c80ea0bd0","fields":{"slug":"/1/"},"frontmatter":{"title":"14-1"}}}]},"previous":{"fields":{"slug":"/arp-attack/"},"frontmatter":{"title":"9-1"}},"next":{"fields":{"slug":"/LoginView/"},"frontmatter":{"title":"Django LoginView 사용"}}},"pageContext":{"id":"723a031e-e408-592d-875a-0ebc19f93a34","series":"컴퓨터 보안","previousPostId":"8ef6b148-c9b0-5e0f-8262-9d5c903ff8da","nextPostId":"33b29129-f5ac-57b7-b66e-814169eebcbc"}},"staticQueryHashes":[]}