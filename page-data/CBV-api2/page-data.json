{"componentChunkName":"component---src-templates-post-jsx","path":"/CBV-api2/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"705c8614-423d-5587-87fb-b8c8b39fb2f6","excerpt":"CBV api 사용해보기2 : crud CreateView DeleteView","html":"<h2>CBV api 사용해보기2 : crud</h2>\n<hr>\n<h4>CreateView</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostCreateView</span><span class=\"token punctuation\">(</span>CreateView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> Post\n    form_class <span class=\"token operator\">=</span> PostForm\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">form_valid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">object</span> <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>commit <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">.</span>author <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>user\n        messages<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"포스트 저장 완료\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>form_valid<span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span> <span class=\"token comment\">#CreateView함수의 form_valid()</span>\n\npost_new <span class=\"token operator\">=</span> PostCreateView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>DeleteView</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostDeleteView</span><span class=\"token punctuation\">(</span>LoginRequiredMixin<span class=\"token punctuation\">,</span> DeleteView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> POST\n\n    <span class=\"token comment\"># 성공하면 이동할 url</span>\n    <span class=\"token comment\">#success_url = reverse('instagram:post_list')</span>\n    <span class=\"token comment\"># success_url은 프로젝트 로딩전 호출, 그러나 instagram:post_list가 적힌 프로젝트.urls는 프로젝트 로딩이 되면서 읽어오기때문에 오류가 생긴다.</span>\n\n    <span class=\"token comment\"># 그렇다면 어떻게 success_url을 설정할까?</span>\n    <span class=\"token comment\"># 방법1) 함수로 구현</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_success_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> reverse<span class=\"token punctuation\">(</span><span class=\"token string\">\"instagram:post_list\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 함수는 실제로 success_url이 필요할 때 실행된다.</span>\n\npost_delete <span class=\"token operator\">=</span> PostDeleteView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostDeleteView</span><span class=\"token punctuation\">(</span>LoginRequiredMixin<span class=\"token punctuation\">,</span> DeleteView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> POST\n\n    <span class=\"token comment\"># 방법1) reverse_lazy 사용</span>\n\tsuccess_url <span class=\"token operator\">=</span> reverse_lazy<span class=\"token punctuation\">(</span><span class=\"token string\">'instagram:post_list'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># reverse_lazy는 실제 success_url이 필요할 때 사용한다.</span>\npost_delete <span class=\"token operator\">=</span> PostDeleteView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"CBV api 사용해보기2 : crud","date":"April 13, 2022","update":null,"tags":["django","python"],"series":"askcompany"},"fields":{"slug":"/CBV-api2/","readingTime":{"minutes":1.025}}},"seriesList":{"edges":[{"node":{"id":"8fefea4f-9b6f-57a4-a7e4-5aedf423b925","fields":{"slug":"/django-ORM/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"86119087-6333-5ffe-a5f6-f42ab50e217e","fields":{"slug":"/rest/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"f82631d3-2495-5141-9090-480ac221f298","fields":{"slug":"/static-media/"},"frontmatter":{"title":"django의 Static & Media 파일"}}},{"node":{"id":"78b9f4e7-a2e2-51b5-894c-6d78a96fb311","fields":{"slug":"/django-admin/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"3632237d-c865-57f5-84d3-42504c3efe06","fields":{"slug":"/json/"},"frontmatter":{"title":"작성중 : json 응답뷰 만들기"}}},{"node":{"id":"bb14e873-7ffb-5e44-adaf-418bc7557714","fields":{"slug":"/http-status-code/"},"frontmatter":{"title":"HTTP 상태 코드"}}},{"node":{"id":"54c123f3-caed-5153-832f-931f477f7c6c","fields":{"slug":"/get-absolute-url/"},"frontmatter":{"title":"detail url을 간단하게 하고싶다면, get_absolute_url"}}},{"node":{"id":"619670e5-53bd-549d-ae35-4f7bfc46d7b4","fields":{"slug":"/queryset/"},"frontmatter":{"title":"작성중 : 쓸만해보이는 쿼리셋팁"}}},{"node":{"id":"bf47726e-6688-5b10-9994-37de18c463c8","fields":{"slug":"/CBV-api/"},"frontmatter":{"title":"CBV api 사용해보기"}}},{"node":{"id":"23091801-a214-5f20-98df-ea82cba424a3","fields":{"slug":"/view-decorators/"},"frontmatter":{"title":"decorator를 사용해서 Django view 꾸며보기"}}},{"node":{"id":"cf0a3ceb-264d-527d-a369-8477a225e7cb","fields":{"slug":"/httprequest-httpresponse/"},"frontmatter":{"title":"HTTPRequest와 HttpResponse"}}},{"node":{"id":"8b966cb7-047c-5f95-ab4c-d581964cfaa0","fields":{"slug":"/form-modelform/"},"frontmatter":{"title":"Django의 Form과 ModelForm"}}},{"node":{"id":"47c287be-bd57-553c-809d-6e0b429f2434","fields":{"slug":"/clean-validators/"},"frontmatter":{"title":"장고 폼의 유효성 검사 : clean과 validators"}}},{"node":{"id":"705c8614-423d-5587-87fb-b8c8b39fb2f6","fields":{"slug":"/CBV-api2/"},"frontmatter":{"title":"CBV api 사용해보기2 : crud"}}},{"node":{"id":"dfa69f72-f805-5b2f-b10c-27700449ef51","fields":{"slug":"/messages/"},"frontmatter":{"title":"Django의 Messages Framework"}}},{"node":{"id":"7c003db0-96e2-515f-9554-4034c9b44f25","fields":{"slug":"/serializer/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"33b29129-f5ac-57b7-b66e-814169eebcbc","fields":{"slug":"/LoginView/"},"frontmatter":{"title":"Django LoginView 사용"}}}]},"previous":{"fields":{"slug":"/clean-validators/"},"frontmatter":{"title":"장고 폼의 유효성 검사 : clean과 validators"}},"next":{"fields":{"slug":"/messages/"},"frontmatter":{"title":"Django의 Messages Framework"}}},"pageContext":{"id":"705c8614-423d-5587-87fb-b8c8b39fb2f6","series":"askcompany","previousPostId":"47c287be-bd57-553c-809d-6e0b429f2434","nextPostId":"dfa69f72-f805-5b2f-b10c-27700449ef51"}},"staticQueryHashes":[]}