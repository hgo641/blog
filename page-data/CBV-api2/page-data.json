{"componentChunkName":"component---src-templates-post-jsx","path":"/CBV-api2/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"24b75555-99e9-5cf5-b345-7f02926c7b6d","excerpt":"CBV api 사용해보기2 : crud CreateView DeleteView","html":"<h2>CBV api 사용해보기2 : crud</h2>\n<hr>\n<h4>CreateView</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostCreateView</span><span class=\"token punctuation\">(</span>CreateView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> Post\n    form_class <span class=\"token operator\">=</span> PostForm\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">form_valid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">object</span> <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>commit <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">.</span>author <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>user\n        messages<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"포스트 저장 완료\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>form_valid<span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span> <span class=\"token comment\">#CreateView함수의 form_valid()</span>\n\npost_new <span class=\"token operator\">=</span> PostCreateView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>DeleteView</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostDeleteView</span><span class=\"token punctuation\">(</span>LoginRequiredMixin<span class=\"token punctuation\">,</span> DeleteView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> POST\n\n    <span class=\"token comment\"># 성공하면 이동할 url</span>\n    <span class=\"token comment\">#success_url = reverse('instagram:post_list')</span>\n    <span class=\"token comment\"># success_url은 프로젝트 로딩전 호출, 그러나 instagram:post_list가 적힌 프로젝트.urls는 프로젝트 로딩이 되면서 읽어오기때문에 오류가 생긴다.</span>\n\n    <span class=\"token comment\"># 그렇다면 어떻게 success_url을 설정할까?</span>\n    <span class=\"token comment\"># 방법1) 함수로 구현</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_success_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> reverse<span class=\"token punctuation\">(</span><span class=\"token string\">\"instagram:post_list\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 함수는 실제로 success_url이 필요할 때 실행된다.</span>\n\npost_delete <span class=\"token operator\">=</span> PostDeleteView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostDeleteView</span><span class=\"token punctuation\">(</span>LoginRequiredMixin<span class=\"token punctuation\">,</span> DeleteView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    model <span class=\"token operator\">=</span> POST\n\n    <span class=\"token comment\"># 방법1) reverse_lazy 사용</span>\n\tsuccess_url <span class=\"token operator\">=</span> reverse_lazy<span class=\"token punctuation\">(</span><span class=\"token string\">'instagram:post_list'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># reverse_lazy는 실제 success_url이 필요할 때 사용한다.</span>\npost_delete <span class=\"token operator\">=</span> PostDeleteView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"CBV api 사용해보기2 : crud","date":"April 13, 2022","update":null,"tags":["django","python"],"series":"askcompany"},"fields":{"slug":"/CBV-api2/","readingTime":{"minutes":1.025}}},"seriesList":{"edges":[{"node":{"id":"8c418e59-f9a5-5fdb-8f42-e3dff2ff08a9","fields":{"slug":"/django-ORM/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"3fab5510-8f86-511d-b0a7-6031ea7f95f8","fields":{"slug":"/rest/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"e41b821c-ba53-5e84-a1ae-c7c4cba634b5","fields":{"slug":"/static-media/"},"frontmatter":{"title":"django의 Static & Media 파일"}}},{"node":{"id":"32500d0b-16dd-5e7c-a16c-b45dd8cf9f0c","fields":{"slug":"/django-admin/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"c52011a6-a94e-5aa8-9612-9c3a352654e9","fields":{"slug":"/json/"},"frontmatter":{"title":"작성중 : json 응답뷰 만들기"}}},{"node":{"id":"97fa8fe6-4603-5a9f-b2f0-c32be0c80118","fields":{"slug":"/view-decorators/"},"frontmatter":{"title":"decorator를 사용해서 Django view 꾸며보기"}}},{"node":{"id":"125af04d-f31e-5dd0-8176-39fec9d54510","fields":{"slug":"/CBV-api/"},"frontmatter":{"title":"CBV api 사용해보기"}}},{"node":{"id":"34e238b9-dd92-5457-846a-8b6d13e76798","fields":{"slug":"/queryset/"},"frontmatter":{"title":"작성중 : 쓸만해보이는 쿼리셋팁"}}},{"node":{"id":"cdf383e6-f2a6-5939-8887-e7501d318084","fields":{"slug":"/http-status-code/"},"frontmatter":{"title":"HTTP 상태 코드"}}},{"node":{"id":"8f38a40f-0d0e-5e23-9922-b0286f3b8a2b","fields":{"slug":"/get-absolute-url/"},"frontmatter":{"title":"detail url을 간단하게 하고싶다면, get_absolute_url"}}},{"node":{"id":"9ea22a57-02a3-5785-af73-eaabf2a736b4","fields":{"slug":"/httprequest-httpresponse/"},"frontmatter":{"title":"HTTPRequest와 HttpResponse"}}},{"node":{"id":"e3bfa53a-3d48-554e-beb7-4648630c16d0","fields":{"slug":"/form-modelform/"},"frontmatter":{"title":"Django의 Form과 ModelForm"}}},{"node":{"id":"6fb810bb-d784-5bde-8528-947db9b3fd9f","fields":{"slug":"/clean-validators/"},"frontmatter":{"title":"장고 폼의 유효성 검사 : clean과 validators"}}},{"node":{"id":"1f084815-ec52-5f58-a947-ec38e1f5a9f0","fields":{"slug":"/messages/"},"frontmatter":{"title":"Django의 Messages Framework"}}},{"node":{"id":"24b75555-99e9-5cf5-b345-7f02926c7b6d","fields":{"slug":"/CBV-api2/"},"frontmatter":{"title":"CBV api 사용해보기2 : crud"}}},{"node":{"id":"c2a4c8ba-644c-5a2e-a5fb-fefc3d400a11","fields":{"slug":"/serializer/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"71a681c8-2fc0-5652-ba2c-5ad25267c318","fields":{"slug":"/LoginView/"},"frontmatter":{"title":"Django LoginView 사용"}}}]},"previous":{"fields":{"slug":"/messages/"},"frontmatter":{"title":"Django의 Messages Framework"}},"next":{"fields":{"slug":"/7-2/"},"frontmatter":{"title":"작성중"}}},"pageContext":{"id":"24b75555-99e9-5cf5-b345-7f02926c7b6d","series":"askcompany","previousPostId":"1f084815-ec52-5f58-a947-ec38e1f5a9f0","nextPostId":"636f95ec-acc2-5d69-a9c3-fd4a5f353fe3"}},"staticQueryHashes":[]}