{"componentChunkName":"component---src-templates-post-jsx","path":"/django-admin/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"32500d0b-16dd-5e7c-a16c-b45dd8cf9f0c","excerpt":"Django admin admin 등록 방법 (1) 기본 ModelAdmin으로 동작 admin 등록 방법 (2) 지정한 ModelAdmin으로 동작 admin 등록 방법 (3) python wrapping 파이썬의 장식자 문법 감싼 대상의 기능을 변경할 수 있다. admin에서 표기되는 모델 객체명 바꾸기 admin에서 모델 객체의 이름은 모델명 obj…","html":"<h2>Django admin</h2>\n<hr>\n<h4>admin 등록 방법 (1)</h4>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>모델명<span class=\"token punctuation\">)</span></code></pre></div>\n<p>기본 ModelAdmin으로 동작</p>\n<h4>admin 등록 방법 (2)</h4>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ModelAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>모델명<span class=\"token punctuation\">,</span> ModelAdmin<span class=\"token punctuation\">)</span></code></pre></div>\n<p>지정한 ModelAdmin으로 동작</p>\n<h4>admin 등록 방법 (3)</h4>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>모델명<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ModelAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span></code></pre></div>\n<p><strong>python wrapping</strong></p>\n<p>파이썬의 장식자 문법</p>\n<p>감싼 대상의 기능을 변경할 수 있다.</p>\n<h3>admin에서 표기되는 모델 객체명 바꾸기</h3>\n<hr>\n<p><strong>admin</strong>에서 모델 객체의 이름은 <strong>모델명 object (n)</strong>의 형식으로 나온다.</p>\n<p>ex) Post object (1)</p>\n<p>이 이름을 바꾸고 싶다면 model선언에서<code class=\"language-text\">def __str__(Self):</code>를 사용한다.</p>\n<h5><code class=\"language-text\">def __str__(Self):</code></h5>\n<p>어떤 객체에 대한 문자열 표현을 할 수 있다.</p>\n<p>ex)</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    message <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    created_at <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>auto_now_add<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    updated_at <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>auto_now<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"(</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">)번째 포스트\"</span></span>\n    \t<span class=\"token comment\">#return \"({})번째 포스트\".format(self.id)</span>\n        <span class=\"token comment\">#return self.message</span></code></pre></div>\n<h3>list_display 속성 정의</h3>\n<hr>\n<p>admin 테이블에서<code class=\"language-text\">list_display</code>에서 적은 속성명을 표기할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n\n<span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>모델명<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ModelAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h4>1) 모델 필드 외 속성 추가하기</h4>\n<p>꼭 모델 필드가 아니더라도 list_display에 추가할 수 있다.</p>\n<blockquote>\n<p>Post의 메세지 길이도 list_play속성에 넣고싶다면?</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    message <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    created_at <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>auto_now_add<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    updated_at <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>auto_now<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"(</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">)번째 포스트\"</span></span>\n    \t<span class=\"token comment\">#return \"({})번째 포스트\".format(self.id)</span>\n    \t<span class=\"token comment\">#return self.message</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">message_length</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \t<span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n\n<span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>모델명<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ModelAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'message_length'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>만약 <code class=\"language-text\">message_length</code>가 자주 쓰이는 로직이라면 모델단에 정의하는게 좋으나 어드민에서만 사용한다면 어드민에서 정의해도 상관없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n\n<span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>모델명<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ModelAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'message_length'</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">message_length</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#post객체는 admin이 알아서 넘겨줌</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> 글자\"</span></span></code></pre></div>\n<h4>2) list<em>display</em>link</h4>\n<p>해당 list_display 필드를 누르면 model 객체 상세로 이동한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n\n<span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>모델명<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ModelAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'message_length'</span><span class=\"token punctuation\">]</span>\n  list_display_links <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h4>3) search_fields</h4>\n<p>admin 테이블에서 검색 가능</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n\n<span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>모델명<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ModelAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'message_length'</span><span class=\"token punctuation\">]</span>\n  list_display_links <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span>\n  search_fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h4>4) list_filter</h4>\n<p>admin 메인에서 필터 기능 제공</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n\n<span class=\"token decorator annotation punctuation\">@admin<span class=\"token punctuation\">.</span>register</span><span class=\"token punctuation\">(</span>모델명<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ModelAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  list_display <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'message_length'</span><span class=\"token punctuation\">]</span>\n  list_display_links <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span>\n  search_fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span>\n  list_filter <span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'created_at'</span><span class=\"token punctuation\">]</span></code></pre></div>","frontmatter":{"title":"django ORM","date":"April 05, 2022","update":null,"tags":["django"],"series":"askcompany"},"fields":{"slug":"/django-admin/","readingTime":{"minutes":2.745}}},"seriesList":{"edges":[{"node":{"id":"8c418e59-f9a5-5fdb-8f42-e3dff2ff08a9","fields":{"slug":"/django-ORM/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"3fab5510-8f86-511d-b0a7-6031ea7f95f8","fields":{"slug":"/rest/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"e41b821c-ba53-5e84-a1ae-c7c4cba634b5","fields":{"slug":"/static-media/"},"frontmatter":{"title":"django의 Static & Media 파일"}}},{"node":{"id":"32500d0b-16dd-5e7c-a16c-b45dd8cf9f0c","fields":{"slug":"/django-admin/"},"frontmatter":{"title":"django ORM"}}},{"node":{"id":"c52011a6-a94e-5aa8-9612-9c3a352654e9","fields":{"slug":"/json/"},"frontmatter":{"title":"작성중 : json 응답뷰 만들기"}}},{"node":{"id":"97fa8fe6-4603-5a9f-b2f0-c32be0c80118","fields":{"slug":"/view-decorators/"},"frontmatter":{"title":"decorator를 사용해서 Django view 꾸며보기"}}},{"node":{"id":"125af04d-f31e-5dd0-8176-39fec9d54510","fields":{"slug":"/CBV-api/"},"frontmatter":{"title":"CBV api 사용해보기"}}},{"node":{"id":"34e238b9-dd92-5457-846a-8b6d13e76798","fields":{"slug":"/queryset/"},"frontmatter":{"title":"작성중 : 쓸만해보이는 쿼리셋팁"}}},{"node":{"id":"cdf383e6-f2a6-5939-8887-e7501d318084","fields":{"slug":"/http-status-code/"},"frontmatter":{"title":"HTTP 상태 코드"}}},{"node":{"id":"8f38a40f-0d0e-5e23-9922-b0286f3b8a2b","fields":{"slug":"/get-absolute-url/"},"frontmatter":{"title":"detail url을 간단하게 하고싶다면, get_absolute_url"}}},{"node":{"id":"9ea22a57-02a3-5785-af73-eaabf2a736b4","fields":{"slug":"/httprequest-httpresponse/"},"frontmatter":{"title":"HTTPRequest와 HttpResponse"}}},{"node":{"id":"e3bfa53a-3d48-554e-beb7-4648630c16d0","fields":{"slug":"/form-modelform/"},"frontmatter":{"title":"Django의 Form과 ModelForm"}}},{"node":{"id":"6fb810bb-d784-5bde-8528-947db9b3fd9f","fields":{"slug":"/clean-validators/"},"frontmatter":{"title":"장고 폼의 유효성 검사 : clean과 validators"}}},{"node":{"id":"1f084815-ec52-5f58-a947-ec38e1f5a9f0","fields":{"slug":"/messages/"},"frontmatter":{"title":"Django의 Messages Framework"}}},{"node":{"id":"24b75555-99e9-5cf5-b345-7f02926c7b6d","fields":{"slug":"/CBV-api2/"},"frontmatter":{"title":"CBV api 사용해보기2 : crud"}}},{"node":{"id":"c2a4c8ba-644c-5a2e-a5fb-fefc3d400a11","fields":{"slug":"/serializer/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"71a681c8-2fc0-5652-ba2c-5ad25267c318","fields":{"slug":"/LoginView/"},"frontmatter":{"title":"Django LoginView 사용"}}}]},"previous":{"fields":{"slug":"/static-media/"},"frontmatter":{"title":"django의 Static & Media 파일"}},"next":{"fields":{"slug":"/6-2/"},"frontmatter":{"title":"os 6-2"}}},"pageContext":{"id":"32500d0b-16dd-5e7c-a16c-b45dd8cf9f0c","series":"askcompany","previousPostId":"e41b821c-ba53-5e84-a1ae-c7c4cba634b5","nextPostId":"7c43173d-c487-5074-806f-7e56f8eeba7b"}},"staticQueryHashes":[]}