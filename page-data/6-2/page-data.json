{"componentChunkName":"component---src-templates-post-jsx","path":"/6-2/","result":{"data":{"site":{"siteMetadata":{"title":"hongo"}},"markdownRemark":{"id":"7f18986d-bd27-5ec2-9316-919595eca11b","excerpt":"큐마다 다른 폴리시 - 멀티레벨 큐 어떤 프로세스가 cpu바운드인지 io바운드인지 알 수 있? 그냥 프로세스만 받아서는 알기 어려움 멀티레벨큐 : 사용어렵 잘 설계해야함 멀티레벨 피드백 큐 여러 개의 큐를 두고 각각의 큐에 대해서 서로 다른 스케줄링 알고리즘을 가져감 프로세스가 여러가지 큐를 옮겨 다닐 수 있음 어떻게 옮겨가는가? 사용자가 결정해야함 피드…","html":"<p>큐마다 다른 폴리시 - 멀티레벨 큐</p>\n<p>어떤 프로세스가 cpu바운드인지 io바운드인지 알 수 있?</p>\n<p>그냥 프로세스만 받아서는 알기 어려움</p>\n<p>멀티레벨큐 : 사용어렵 잘 설계해야함</p>\n<h2>멀티레벨 피드백 큐</h2>\n<p>여러 개의 큐를 두고 각각의 큐에 대해서 서로 다른 스케줄링 알고리즘을 가져감</p>\n<p>프로세스가 여러가지 큐를 옮겨 다닐 수 있음</p>\n<p>어떻게 옮겨가는가? 사용자가 결정해야함</p>\n<p>피드백 방법에 근거해서 결정함. 이전 스케줄링의 결과가 다음 큐를 결정한다</p>\n<ul>\n<li>한 프로세스가 특정 큐에 종속되는게아니라 계속 옮겨다닐 수 있음</li>\n</ul>\n<p>ex) 네개큐. 라운드로빈. 타임퀀텀만 다르게가져감</p>\n<p>타임퀀텀이 짧은건 I/O 바운드 어플리케이션에게 유리함. 긴건 cpu 바운드</p>\n<ul>\n<li>처음에는 다 Q0으로 들어감(프로세스가 어떤 애인지 모름)</li>\n<li>만약 프로세스가 주어진 타임 퀀텀(타임 슬라이스)을 다 쓴다면 프라이어리티를 하나 낮춘다 : 타임퀀텀이 부족해서 끝남 -> Q1으로 내려줌.</li>\n<li>블로킹되어서 끝났다면. 아이오요청을하면서 기다려야해서 waiting queue로 내려옴. 반대로 increase. 프라이어리티를 높인다(아이오바운드일 확률)</li>\n</ul>\n<p>동일한 나이스 밸류를 가지면(동일한 타임퀀텀)</p>\n<h2>Linux Scheduling</h2>\n<h3>Completely Fair Scheduler (CFS)</h3>\n<p>큐레벨 말고도 스케줄링 클래스라는게 존재</p>\n<h4>Scheduling classes</h4>\n<p>두 개의 클래스가 존재</p>\n<ul>\n<li>default</li>\n<li>real-time : 주어진 시간내에 반드시 그 일을 끝내야하는</li>\n</ul>\n<p>real-time이 default보다 큰 우선순위를 갖는다</p>\n<p><strong>quantum based(고정된 시간)가 아닌 proportion(각각의 프로세스에게 전체시간중에 얼만큼을 할당해줄지. 비율을 어떻게 할당해줄지)</strong></p>\n<ul>\n<li>Variable quantum size</li>\n</ul>\n<h4>nice value</h4>\n<p>default class에서 -20 + 19</p>\n<p>낮은 숫자가 높은 우선순위</p>\n<blockquote>\n<p>-20은 시스템 앱처럼 굉장히 중요한 애들이 가져가고</p>\n<p>19는 cpu bound인 애들 등이 가져간다</p>\n</blockquote>\n<h4>virtul run time (상대적인 실행 시간)</h4>\n<ul>\n<li>시스템은 가장 낮은 virtual run time을 선택</li>\n</ul>\n<blockquote>\n<p>동일한 nice value를 가지는 두 개의 프로세스 존재(p1, p2)</p>\n<p>nice value가 같으면 할당받을 수 있는 time quantum도 동일(20ms라고 가정)</p>\n<p>p1 (20) - p2 (20) - p1(20)</p>\n<p>현재 p1(40), p2(20)만큼 돌았음</p>\n<p>이 때 둘의 nice value가 같기 때문에 p2선택</p>\n</blockquote>\n<p>​\t\t</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">nice value</th>\n<th align=\"center\">우선순위</th>\n<th align=\"center\">weight</th>\n<th align=\"center\">할당된 시간</th>\n<th align=\"center\">scale factor</th>\n<th align=\"center\">virtul run time</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">0</td>\n<td align=\"center\">높음</td>\n<td align=\"center\">3</td>\n<td align=\"center\">45(더 많이 돌게함)</td>\n<td align=\"center\">1</td>\n<td align=\"center\">40(더 작은걸 실행)</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">낮음</td>\n<td align=\"center\">1</td>\n<td align=\"center\">15</td>\n<td align=\"center\">3</td>\n<td align=\"center\">60</td>\n</tr>\n</tbody>\n</table>\n<p>오래 수행되는 애들은(ex. cpu bound) virtul run time을 증가시켜서 선택 가능성을 감소시킨다</p>\n<p>for starv방지. 공평한 스케줄링</p>\n<blockquote>\n<p>서로 다른 nice value를 가지는 두 개의 프로세스 존재</p>\n<p>p1 weight : p2 weight = 3:1</p>\n<p>time quantum은 동일 (nice value가 달라도 time quantum은 같을 수 있다)</p>\n<p>p1 (20) - p2 (20) - p1(20)</p>\n<ul>\n<li>총 60의 시간 중 weight에 의해 계산된 적정 cpu time 비율 (p1-45, p2-15)</li>\n<li>실제 차지한 cpu time ( p1(40), p2(20) )</li>\n</ul>\n<p>scale factor (weight의 역수) : <strong>priority가 높으면 scale factor도 높여줌</strong></p>\n<p>p1 scale factor = 1</p>\n<p>p2 scale factor = 3</p>\n<p>virtual runtime = 실제 cpu time x scalefactor</p>\n<p>p1의 virtual runtime은 40 * 1 = 40</p>\n<p>p2의 virtual runtime은 20 * 3 = 60</p>\n<p>virtual runtime이 적은 p1을 고른다</p>\n</blockquote>\n<ul>\n<li>default의 nice value는 (-20~19)</li>\n<li>real-time 까지 합쳐서 보면 -20 = 100, 19 = 139</li>\n</ul>","frontmatter":{"title":"os 6-2","date":"April 06, 2022","update":null,"tags":["OS"],"series":null},"fields":{"slug":"/6-2/","readingTime":{"minutes":4.92}}},"seriesList":{"edges":[{"node":{"id":"1f4e5238-73be-5807-a94c-f4de69b70d29","fields":{"slug":"/git1/"},"frontmatter":{"title":"git pull 오류 : fatal: refusing to merge unrelated histories"}}},{"node":{"id":"a18a1199-15b8-567b-b381-9877cb7e1482","fields":{"slug":"/flex/"},"frontmatter":{"title":"flex 해보기 ㅎㅎ"}}},{"node":{"id":"dcd66e70-19bb-529a-93eb-a40dcda3967d","fields":{"slug":"/meta-class/"},"frontmatter":{"title":"Django의 Meta 클래스 활용"}}},{"node":{"id":"9ba353f1-cdcf-5911-a0bd-05ab1ab2c88e","fields":{"slug":"/alpha-beta-pruning/"},"frontmatter":{"title":"Minimax 알고리즘 & alpha-beta 가지치기"}}},{"node":{"id":"7f18986d-bd27-5ec2-9316-919595eca11b","fields":{"slug":"/6-2/"},"frontmatter":{"title":"os 6-2"}}},{"node":{"id":"3e388686-2418-5776-a4f4-7d485967ad50","fields":{"slug":"/instance-flex/"},"frontmatter":{"title":"장고하다가 모델 인스턴스 뻥튀기 하고싶을때"}}},{"node":{"id":"3dfd35bf-9f06-57e0-8aae-bbe57bac7616","fields":{"slug":"/grid/"},"frontmatter":{"title":"그리드를 어떻게 그리드라"}}},{"node":{"id":"35cb486b-c0aa-5492-bf01-368334b4e4d5","fields":{"slug":"/datamining/"},"frontmatter":{"title":"작성중"}}},{"node":{"id":"d8cb2c75-c4f1-5607-9036-fdfb429643bd","fields":{"slug":"/7-2/"},"frontmatter":{"title":"os 7-2"}}},{"node":{"id":"5e929406-a010-55f2-8762-1f8c050eaf4c","fields":{"slug":"/7-1/"},"frontmatter":{"title":"os 7-1"}}},{"node":{"id":"58f895f6-cc6d-51eb-b09a-0eade39b1e41","fields":{"slug":"/8-1/"},"frontmatter":{"title":"os 8-1"}}},{"node":{"id":"3b144405-2ae5-5814-a3eb-f3db08d57801","fields":{"slug":"/auth-user/"},"frontmatter":{"title":"AUTH_USER_MODEL 사용"}}},{"node":{"id":"a1a1c386-4e12-55c0-b88e-b1ab29cfc979","fields":{"slug":"/sync-tools/"},"frontmatter":{"title":"os 10-1 Synchronization Tools"}}},{"node":{"id":"a8468bab-91a9-5069-bc3f-049d1a5aceb9","fields":{"slug":"/env/"},"frontmatter":{"title":"SECRET KEY 환경변수에 숨기기"}}},{"node":{"id":"85ca9819-7740-5d19-bde1-f1825944fb23","fields":{"slug":"/11-1/"},"frontmatter":{"title":"os 11-1"}}},{"node":{"id":"fe1864b8-839f-505a-8647-10db01ebd21a","fields":{"slug":"/11-2/"},"frontmatter":{"title":"os 11-2"}}},{"node":{"id":"641a26c1-7a3f-591a-9294-2b8a329ef9a6","fields":{"slug":"/list-comprehension/"},"frontmatter":{"title":"list comprehension"}}},{"node":{"id":"8e10d9c5-ccdf-5fb1-9389-4a7d2618115c","fields":{"slug":"/zip/"},"frontmatter":{"title":"zip"}}},{"node":{"id":"232934ea-695b-59c3-9933-f70434f65675","fields":{"slug":"/access-token/"},"frontmatter":{"title":"git access token 발급 잔디 테스트"}}},{"node":{"id":"4692c2dc-2ae0-58ba-92be-fc345d912b43","fields":{"slug":"/requests/"},"frontmatter":{"title":"python 라이브러리 requests"}}},{"node":{"id":"a49c908d-fe72-5ab8-aeca-835d60f50497","fields":{"slug":"/docker-concept/"},"frontmatter":{"title":"docker 개념"}}},{"node":{"id":"756b4f22-d300-58fe-8d33-fafc6ff511f6","fields":{"slug":"/docker-env/"},"frontmatter":{"title":"docker env설정(작성중ㅎㅎ)"}}},{"node":{"id":"254cabc8-767a-509a-8ac6-1b7c1fee5877","fields":{"slug":"/install-openssl/"},"frontmatter":{"title":"ubuntu에서 openssl 설치하기"}}},{"node":{"id":"7b7a0020-f454-5945-885b-8972512e0d8e","fields":{"slug":"/ssl-concept/"},"frontmatter":{"title":"ssl 인증서란?"}}},{"node":{"id":"d6ccffc2-7b03-5581-b29a-ac306dc06194","fields":{"slug":"/jupyter-setting/"},"frontmatter":{"title":"장고 shell 명령 주피터에서 할 때 초기세팅"}}},{"node":{"id":"9bf2c6c3-9f60-5a55-98d1-e060211c8163","fields":{"slug":"/sync-exam/"},"frontmatter":{"title":"os 10-2 Synchronization Examples"}}},{"node":{"id":"910aa000-d355-501d-a941-b234944b4fec","fields":{"slug":"/bash/"},"frontmatter":{"title":"bash: vi: command not found"}}},{"node":{"id":"4bec6f60-3a0e-5050-b6c4-1a9d7a232ba4","fields":{"slug":"/1/"},"frontmatter":{"title":"os 13-1"}}},{"node":{"id":"02483ae7-ba0a-5e03-aa72-19a907837984","fields":{"slug":"/2/"},"frontmatter":{"title":"os 13-2"}}},{"node":{"id":"ce978a60-290f-5fbb-b75d-f9ec9e6f57e2","fields":{"slug":"/1/"},"frontmatter":{"title":"os 12-1"}}},{"node":{"id":"bfc80393-1cd7-5fc8-bc04-e744783e77de","fields":{"slug":"/2/"},"frontmatter":{"title":"os 12-2"}}},{"node":{"id":"e41df5b8-30c6-54fe-88c9-1d212c70c9f4","fields":{"slug":"/15/"},"frontmatter":{"title":"os 14-2"}}},{"node":{"id":"d86a8175-8ed2-572f-9679-d8d2a48d0697","fields":{"slug":"/2/"},"frontmatter":{"title":"os 14-2"}}},{"node":{"id":"a8eb5fd5-89bd-592a-bbbd-81ff257715b2","fields":{"slug":"/1/"},"frontmatter":{"title":"os 14-1"}}},{"node":{"id":"b2e15c0a-3e85-5d09-bb9a-930a3af8456a","fields":{"slug":"/kr-str/"},"frontmatter":{"title":"[c++] 한글을 한 글자씩 출력하기"}}},{"node":{"id":"ad012487-5365-57df-8a83-b70be15aa316","fields":{"slug":"/arr-addr/"},"frontmatter":{"title":"arr과 &arr의 차이"}}},{"node":{"id":"5063006c-e0ec-58ad-bbd0-0e5f2ab7ad99","fields":{"slug":"/git2/"},"frontmatter":{"title":"git error: cannot lock ref 'refs/remotes/origin/main': unable to resolve reference 'refs/remotes/origin/main': reference broken 문제 해결"}}}]},"previous":{"fields":{"slug":"/django-admin/"},"frontmatter":{"title":"django ORM"}},"next":{"fields":{"slug":"/json/"},"frontmatter":{"title":"작성중 : json 응답뷰 만들기"}}},"pageContext":{"id":"7f18986d-bd27-5ec2-9316-919595eca11b","series":null,"previousPostId":"78b9f4e7-a2e2-51b5-894c-6d78a96fb311","nextPostId":"3632237d-c865-57f5-84d3-42504c3efe06"}},"staticQueryHashes":[]}